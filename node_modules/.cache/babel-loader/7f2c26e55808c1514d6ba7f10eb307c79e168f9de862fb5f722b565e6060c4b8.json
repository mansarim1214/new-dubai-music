{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Work\\\\DubaiMusic\\\\dubai-music\\\\src\\\\components\\\\View\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { BsHeartFill } from \"react-icons/bs\";\nimport { gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport \"./frontend.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(Draggable);\nconst Home = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [artistsByCategory, setArtistsByCategory] = useState({});\n  const carouselRefs = useRef([]);\n  useEffect(() => {\n    const manualArtistOrder = {\n      Singers: [\"Jerome Deligero\", \"Emily Peacock\", \"Toi Dupras\", \"Yvonne Park\", \"Matt Palmer\", \"Lina Ammor- Jevtic\", \"Eirini Devitt\", \"Juan Pablo Pellicer\", \"Nick Pritchard\", \"Mostafa Sattar\", \"Jin Flora\", \"Robbi McFaulds\"],\n      DJ: [\"Dadou\", \"Elena\", \"Yana Kulyk\", \"Raphy J\", \"DJ Stylez\", \"DJ Melyna\"],\n      Musicians: [\"Ksenia Kot\", \"Jose Ramon Nunez\", \"Soren Lyng Hansen\", \"Tatiana Durova\", \"Aleksandra Dudek\", \"Ulyana Goncharova\"],\n      Trending: [\"Carrie Gibsonâ€™s NuvoSoul\", \"Jaymie Deville\", \"Chelsey Chantelle\", \"Golden Collective\", \"Abdallah Seleem\", \"Dany Echemendia\", \"Marvin Lee\"]\n    };\n    const fetchData = async () => {\n      try {\n        const categoriesResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/categories`);\n        const fetchedCategories = categoriesResponse.data;\n        const artistsResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/artists`);\n        const fetchedArtists = artistsResponse.data;\n        const desiredOrder = [\"Trending\", \"Singers\", \"Solo Looping Artists\", \"Band\", \"DJ\", \"Musicians\"];\n        fetchedCategories.sort((a, b) => {\n          const aIndex = desiredOrder.indexOf(a.name);\n          const bIndex = desiredOrder.indexOf(b.name);\n          if (aIndex === -1 && bIndex === -1) return 0;\n          if (aIndex === -1) return 1;\n          if (bIndex === -1) return -1;\n          return aIndex - bIndex;\n        });\n        const storedFavorites = JSON.parse(localStorage.getItem(\"favoriteArtists\")) || {};\n        const groupedArtists = {};\n        fetchedCategories.forEach(category => {\n          let sortedArtists = fetchedArtists.filter(artist => artist.category === category.name).map(artist => ({\n            ...artist,\n            isFavorite: storedFavorites[artist._id] || false\n          }));\n          const order = manualArtistOrder[category.name];\n          if (order) {\n            // Sort based on manualArtistOrder\n            const sortedByManualOrder = sortedArtists.filter(artist => order.includes(artist.title)).sort((a, b) => order.indexOf(a.title) - order.indexOf(b.title));\n\n            // Add artists not in the manualArtistOrder at the end\n            const remainingArtists = sortedArtists.filter(artist => !order.includes(artist.title));\n            sortedArtists = [...sortedByManualOrder, ...remainingArtists];\n          }\n          groupedArtists[category.name] = sortedArtists;\n        });\n        setCategories(fetchedCategories);\n        setArtistsByCategory(groupedArtists);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    categories.forEach((_, index) => {\n      const carousel = carouselRefs.current[index];\n      if (carousel) {\n        Draggable.create(carousel, {\n          type: \"x\",\n          edgeResistance: 0.65,\n          bounds: carousel.parentElement,\n          inertia: true,\n          onDragEnd: function () {\n            // Snap back to the nearest item if desired\n          }\n        });\n      }\n    });\n  }, [categories, artistsByCategory]);\n  const toggleFavorite = artistId => {\n    const updatedArtistsByCategory = {\n      ...artistsByCategory\n    };\n    let isFavorite = false;\n\n    // Update local state\n    Object.keys(updatedArtistsByCategory).forEach(category => {\n      updatedArtistsByCategory[category] = updatedArtistsByCategory[category].map(artist => {\n        if (artist._id === artistId) {\n          isFavorite = !artist.isFavorite;\n          return {\n            ...artist,\n            isFavorite\n          };\n        }\n        return artist;\n      });\n    });\n    setArtistsByCategory(updatedArtistsByCategory);\n\n    // Update localStorage\n    const favoriteArtists = JSON.parse(localStorage.getItem(\"favoriteArtists\")) || {};\n    if (isFavorite) {\n      favoriteArtists[artistId] = true;\n    } else {\n      delete favoriteArtists[artistId];\n    }\n    localStorage.setItem(\"favoriteArtists\", JSON.stringify(favoriteArtists));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainFront\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        id: \"explore\",\n        children: categories.filter(category => artistsByCategory[category.name] && artistsByCategory[category.name].length > 0).map((category, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"artSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"my-2 artCat\",\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artistCarousel\",\n            ref: el => carouselRefs.current[index] = el,\n            style: {\n              display: \"flex\",\n              overflow: \"hidden\"\n            },\n            children: artistsByCategory[category.name].map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artistItem\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/artist/${artist._id}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: artist.image,\n                  alt: artist.title,\n                  className: \"artistImage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `favoriteButton ${artist.isFavorite ? \"favorite\" : \"\"}`,\n                onClick: () => toggleFavorite(artist._id),\n                children: /*#__PURE__*/_jsxDEV(BsHeartFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 23\n              }, this)]\n            }, artist._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)]\n        }, category._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"N5rwRMata73qWsNp7ZjhDAQVMBU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Link","BsHeartFill","gsap","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","registerPlugin","Home","_s","categories","setCategories","artistsByCategory","setArtistsByCategory","carouselRefs","manualArtistOrder","Singers","DJ","Musicians","Trending","fetchData","categoriesResponse","get","process","env","REACT_APP_API_URL","fetchedCategories","data","artistsResponse","fetchedArtists","desiredOrder","sort","a","b","aIndex","indexOf","name","bIndex","storedFavorites","JSON","parse","localStorage","getItem","groupedArtists","forEach","category","sortedArtists","filter","artist","map","isFavorite","_id","order","sortedByManualOrder","includes","title","remainingArtists","error","console","_","index","carousel","current","create","type","edgeResistance","bounds","parentElement","inertia","onDragEnd","toggleFavorite","artistId","updatedArtistsByCategory","Object","keys","favoriteArtists","setItem","stringify","children","className","id","length","fileName","_jsxFileName","lineNumber","columnNumber","ref","el","style","display","overflow","to","src","image","alt","onClick","_c","$RefreshReg$"],"sources":["D:/My Work/DubaiMusic/dubai-music/src/components/View/Home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsHeartFill } from \"react-icons/bs\";\r\nimport { gsap } from \"gsap\";\r\nimport { Draggable } from \"gsap/Draggable\";\r\nimport \"./frontend.css\";\r\n\r\ngsap.registerPlugin(Draggable);\r\n\r\nconst Home = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [artistsByCategory, setArtistsByCategory] = useState({});\r\n  const carouselRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const manualArtistOrder = {\r\n      Singers: [\r\n        \"Jerome Deligero\",\r\n        \"Emily Peacock\",\r\n        \"Toi Dupras\",\r\n        \"Yvonne Park\",\r\n        \"Matt Palmer\",\r\n        \"Lina Ammor- Jevtic\",\r\n        \"Eirini Devitt\",\r\n        \"Juan Pablo Pellicer\",\r\n        \"Nick Pritchard\",\r\n        \"Mostafa Sattar\",\r\n        \"Jin Flora\",\r\n        \"Robbi McFaulds\",\r\n      ],\r\n      DJ: [\"Dadou\", \"Elena\", \"Yana Kulyk\", \"Raphy J\", \"DJ Stylez\", \"DJ Melyna\"],\r\n      Musicians: [\r\n        \"Ksenia Kot\",\r\n        \"Jose Ramon Nunez\",\r\n        \"Soren Lyng Hansen\",\r\n        \"Tatiana Durova\",\r\n        \"Aleksandra Dudek\",\r\n        \"Ulyana Goncharova\",\r\n      ],\r\n      Trending: [\r\n        \"Carrie Gibsonâ€™s NuvoSoul\",\r\n        \"Jaymie Deville\",\r\n        \"Chelsey Chantelle\",\r\n        \"Golden Collective\",\r\n        \"Abdallah Seleem\",\r\n        \"Dany Echemendia\",\r\n        \"Marvin Lee\",\r\n      ],\r\n    };\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const categoriesResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/categories`\r\n        );\r\n        const fetchedCategories = categoriesResponse.data;\r\n\r\n        const artistsResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/artists`\r\n        );\r\n        const fetchedArtists = artistsResponse.data;\r\n\r\n        const desiredOrder = [\r\n          \"Trending\",\r\n          \"Singers\",\r\n          \"Solo Looping Artists\",\r\n          \"Band\",\r\n          \"DJ\",\r\n          \"Musicians\",\r\n        ];\r\n\r\n        fetchedCategories.sort((a, b) => {\r\n          const aIndex = desiredOrder.indexOf(a.name);\r\n          const bIndex = desiredOrder.indexOf(b.name);\r\n          if (aIndex === -1 && bIndex === -1) return 0;\r\n          if (aIndex === -1) return 1;\r\n          if (bIndex === -1) return -1;\r\n          return aIndex - bIndex;\r\n        });\r\n\r\n        const storedFavorites =\r\n          JSON.parse(localStorage.getItem(\"favoriteArtists\")) || {};\r\n        const groupedArtists = {};\r\n\r\n        fetchedCategories.forEach((category) => {\r\n          let sortedArtists = fetchedArtists\r\n            .filter((artist) => artist.category === category.name)\r\n            .map((artist) => ({\r\n              ...artist,\r\n              isFavorite: storedFavorites[artist._id] || false,\r\n            }));\r\n\r\n          const order = manualArtistOrder[category.name];\r\n          if (order) {\r\n            // Sort based on manualArtistOrder\r\n            const sortedByManualOrder = sortedArtists\r\n              .filter((artist) => order.includes(artist.title))\r\n              .sort((a, b) => order.indexOf(a.title) - order.indexOf(b.title));\r\n\r\n            // Add artists not in the manualArtistOrder at the end\r\n            const remainingArtists = sortedArtists.filter(\r\n              (artist) => !order.includes(artist.title)\r\n            );\r\n\r\n            sortedArtists = [...sortedByManualOrder, ...remainingArtists];\r\n          }\r\n\r\n          groupedArtists[category.name] = sortedArtists;\r\n        });\r\n\r\n        setCategories(fetchedCategories);\r\n        setArtistsByCategory(groupedArtists);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    categories.forEach((_, index) => {\r\n      const carousel = carouselRefs.current[index];\r\n      if (carousel) {\r\n        Draggable.create(carousel, {\r\n          type: \"x\",\r\n          edgeResistance: 0.65,\r\n          bounds: carousel.parentElement,\r\n          inertia: true,\r\n          onDragEnd: function () {\r\n            // Snap back to the nearest item if desired\r\n          },\r\n        });\r\n      }\r\n    });\r\n  }, [categories, artistsByCategory]);\r\n\r\n  const toggleFavorite = (artistId) => {\r\n    const updatedArtistsByCategory = { ...artistsByCategory };\r\n    let isFavorite = false;\r\n\r\n    // Update local state\r\n    Object.keys(updatedArtistsByCategory).forEach((category) => {\r\n      updatedArtistsByCategory[category] = updatedArtistsByCategory[\r\n        category\r\n      ].map((artist) => {\r\n        if (artist._id === artistId) {\r\n          isFavorite = !artist.isFavorite;\r\n          return { ...artist, isFavorite };\r\n        }\r\n        return artist;\r\n      });\r\n    });\r\n\r\n    setArtistsByCategory(updatedArtistsByCategory);\r\n\r\n    // Update localStorage\r\n    const favoriteArtists =\r\n      JSON.parse(localStorage.getItem(\"favoriteArtists\")) || {};\r\n    if (isFavorite) {\r\n      favoriteArtists[artistId] = true;\r\n    } else {\r\n      delete favoriteArtists[artistId];\r\n    }\r\n    localStorage.setItem(\"favoriteArtists\", JSON.stringify(favoriteArtists));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mainFront\">\r\n        <div className=\"container-fluid\" id=\"explore\">\r\n          {categories\r\n            .filter(\r\n              (category) =>\r\n                artistsByCategory[category.name] &&\r\n                artistsByCategory[category.name].length > 0\r\n            )\r\n            .map((category, index) => (\r\n              <section key={category._id} className=\"artSection\">\r\n                <h2 className=\"my-2 artCat\">{category.name}</h2>\r\n                <div\r\n                  className=\"artistCarousel\"\r\n                  ref={(el) => (carouselRefs.current[index] = el)}\r\n                  style={{ display: \"flex\", overflow: \"hidden\" }}\r\n                >\r\n                  {artistsByCategory[category.name].map((artist) => (\r\n                    <div key={artist._id} className=\"artistItem\">\r\n                      <Link to={`/artist/${artist._id}`}>\r\n                        <img\r\n                          src={artist.image}\r\n                          alt={artist.title}\r\n                          className=\"artistImage\"\r\n                        />\r\n                      </Link>\r\n                      <button\r\n                        className={`favoriteButton ${\r\n                          artist.isFavorite ? \"favorite\" : \"\"\r\n                        }`}\r\n                        onClick={() => toggleFavorite(artist._id)}\r\n                      >\r\n                        <BsHeartFill />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </section>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}