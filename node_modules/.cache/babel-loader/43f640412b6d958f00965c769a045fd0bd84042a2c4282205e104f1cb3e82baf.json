{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Work\\\\DubaiMusic\\\\dubai-music\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n// Import jwt-decode if you want to decode JWTs (optional)\n// import jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Added loading state\n\n  useEffect(() => {\n    // Simulate fetching user data or token from localStorage/API\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        // Decode token and set user data (assuming token contains user info)\n        // const userData = jwtDecode(token); // Use jwt-decode if needed\n        const userData = {\n          role: 'admin'\n        }; // Example user with admin role\n        setUser(userData);\n      } catch (error) {\n        console.error('Error decoding token:', error);\n      }\n    }\n    setLoading(false); // Set loading to false after token check\n  }, []);\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null); // Clear user data\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","userData","role","error","console","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/My Work/DubaiMusic/dubai-music/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n// Import jwt-decode if you want to decode JWTs (optional)\r\n// import jwtDecode from 'jwt-decode';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);  // Added loading state\r\n\r\n    useEffect(() => {\r\n        // Simulate fetching user data or token from localStorage/API\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            try {\r\n                // Decode token and set user data (assuming token contains user info)\r\n                // const userData = jwtDecode(token); // Use jwt-decode if needed\r\n                const userData = { role: 'admin' }; // Example user with admin role\r\n                setUser(userData);\r\n            } catch (error) {\r\n                console.error('Error decoding token:', error);\r\n            }\r\n        }\r\n        setLoading(false); // Set loading to false after token check\r\n    }, []);\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setUser(null); // Clear user data\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, setUser, logout, loading }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE/CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACP,IAAI;QACA;QACA;QACA,MAAMG,QAAQ,GAAG;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC,CAAC;QACpCP,OAAO,CAACM,QAAQ,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ;IACAN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,MAAM,GAAGA,CAAA,KAAM;IACjBN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCX,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,IAAI;MAAEC,OAAO;MAAEU,MAAM;MAAET;IAAQ,CAAE;IAAAJ,QAAA,EAC3DA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACnB,EAAA,CA9BWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAgCzB,OAAO,MAAMuB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM9B,UAAU,CAACK,WAAW,CAAC;AAAA;AAACyB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}