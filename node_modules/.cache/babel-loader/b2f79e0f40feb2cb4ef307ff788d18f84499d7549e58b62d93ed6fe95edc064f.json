{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Work\\\\DubaiMusic\\\\dubai-music\\\\src\\\\components\\\\Dashboard\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bcrypt = require('bcryptjs');\nconst Login = () => {\n  _s();\n  const [input, setInput] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleSubmitEvent = async e => {\n    e.preventDefault();\n    try {\n      const salt = await bcrypt.genSalt(10);\n      const hashedPassword = await bcrypt.hash(input.password, salt);\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: input.email,\n          password: hashedPassword\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem(\"token\", data.token);\n        window.location.href = \"/venues\";\n      } else {\n        setError(\"Invalid email or password\");\n      }\n    } catch (error) {\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInput({\n      ...input,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-custom\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 bg-black p-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmitEvent,\n            className: \"form mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"user-email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"user-email\",\n                name: \"email\",\n                \"aria-describedby\": \"user-email\",\n                \"aria-invalid\": \"false\",\n                onChange: handleInput,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_control my-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                name: \"password\",\n                \"aria-describedby\": \"user-password\",\n                \"aria-invalid\": \"false\",\n                onChange: handleInput,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn instant-btn px-5\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ivXum+JrTlfApEVUVCvF+ttcW4g=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","bcrypt","require","Login","_s","input","setInput","email","password","error","setError","handleSubmitEvent","e","preventDefault","salt","genSalt","hashedPassword","hash","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","token","window","location","href","handleInput","name","value","target","className","children","style","justifyContent","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","color","_c","$RefreshReg$"],"sources":["D:/My Work/DubaiMusic/dubai-music/src/components/Dashboard/Login.js"],"sourcesContent":["import { useState } from 'react';\r\nconst bcrypt = require('bcryptjs');\r\n\r\nconst Login = () => {\r\n  const [input, setInput] = useState({ email: '', password: '' });\r\n  const [error, setError] = useState('');\r\n\r\n\r\n\r\n  const handleSubmitEvent = async (e) => {\r\n   \r\n    e.preventDefault();\r\n    try {\r\n      const salt = await bcrypt.genSalt(10);\r\n      const hashedPassword = await bcrypt.hash(input.password, salt);\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: input.email,\r\n          password: hashedPassword,\r\n        }),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        localStorage.setItem(\"token\", data.token);\r\n        window.location.href = \"/venues\";\r\n      } else {\r\n        setError(\"Invalid email or password\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setInput({ ...input, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-custom\">\r\n      <div className=\"container \">\r\n        <div className=\"row\"  style={{ justifyContent: 'center' }}>\r\n          <div className=\"col-md-6 bg-black p-5\">\r\n        <form onSubmit={handleSubmitEvent} className=\"form mb-3\">\r\n          <div className=\"form_control\">\r\n            <label htmlFor=\"user-email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"user-email\"\r\n              name=\"email\"\r\n              aria-describedby=\"user-email\"\r\n              aria-invalid=\"false\"\r\n              onChange={handleInput}\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"form_control my-3\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              aria-describedby=\"user-password\"\r\n              aria-invalid=\"false\"\r\n              onChange={handleInput}\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <button className=\"btn instant-btn px-5\">Login</button>\r\n        </form>\r\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n        </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}