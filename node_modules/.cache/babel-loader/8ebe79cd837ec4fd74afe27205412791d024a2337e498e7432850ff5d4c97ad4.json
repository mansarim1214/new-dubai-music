{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Work\\\\DubaiMusic\\\\dubai-music\\\\src\\\\components\\\\View\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// import MultiCarousel from \"react-multi-carousel\";\n// import \"react-multi-carousel/lib/styles.css\";\n\nimport GSAPCarousel from \"./GSAPCarousel\"; // Make sure to adjust the import path\n\nimport { Link } from \"react-router-dom\";\nimport { BsHeartFill } from \"react-icons/bs\";\nimport \"./frontend.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [artistsByCategory, setArtistsByCategory] = useState({});\n  // const [setLoading] = useState(true);\n  // const [setError] = useState(null);\n\n  useEffect(() => {\n    const manualArtistOrder = {\n      Singers: [\"Jerome Deligero\", \"Emily Peacock\", \"Toi Dupras\", \"Yvonne Park\", \"Matt Palmer\", \"Lina Ammor- Jevtic\", \"Eirini Devitt\", \"Juan Pablo Pellicer\", \"Nick Pritchard\", \"Mostafa Sattar\", \"Jin Flora\", \"Robbi McFaulds\"],\n      DJ: [\"Dadou\", \"Elena\", \"Yana Kulyk\", \"Raphy J\", \"DJ Stylez\", \"DJ Melyna\"],\n      Musicians: [\"Ksenia Kot\", \"Jose Ramon Nunez\", \"Soren Lyng Hansen\", \"Tatiana Durova\", \"Aleksandra Dudek\", \"Ulyana Goncharova\"],\n      Trending: [\"Carrie Gibsonâ€™s NuvoSoul\", \"Jaymie Deville\", \"Chelsey Chantelle\", \"Golden Collective\", \"Abdallah Seleem\", \"Dany Echemendia\", \"Marvin Lee\"]\n    };\n    const fetchData = async () => {\n      try {\n        const categoriesResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/categories`);\n        const fetchedCategories = categoriesResponse.data;\n        const artistsResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/artists`);\n        const fetchedArtists = artistsResponse.data;\n        const desiredOrder = [\"Trending\", \"Singers\", \"Solo Looping Artists\", \"Band\", \"DJ\", \"Musicians\"];\n        fetchedCategories.sort((a, b) => {\n          const aIndex = desiredOrder.indexOf(a.name);\n          const bIndex = desiredOrder.indexOf(b.name);\n          if (aIndex === -1 && bIndex === -1) return 0;\n          if (aIndex === -1) return 1;\n          if (bIndex === -1) return -1;\n          return aIndex - bIndex;\n        });\n        const storedFavorites = JSON.parse(localStorage.getItem(\"favoriteArtists\")) || {};\n        const groupedArtists = {};\n        fetchedCategories.forEach(category => {\n          let sortedArtists = fetchedArtists.filter(artist => artist.category === category.name).map(artist => ({\n            ...artist,\n            isFavorite: storedFavorites[artist._id] || false\n          }));\n          const order = manualArtistOrder[category.name];\n          if (order) {\n            // Sort based on manualArtistOrder\n            const sortedByManualOrder = sortedArtists.filter(artist => order.includes(artist.title)).sort((a, b) => order.indexOf(a.title) - order.indexOf(b.title));\n\n            // Add artists not in the manualArtistOrder at the end\n            const remainingArtists = sortedArtists.filter(artist => !order.includes(artist.title));\n            sortedArtists = [...sortedByManualOrder, ...remainingArtists];\n          }\n          groupedArtists[category.name] = sortedArtists;\n        });\n        setCategories(fetchedCategories);\n        setArtistsByCategory(groupedArtists);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  // Dependency array is now empty, no need to include `manualArtistOrder`\n\n  const toggleFavorite = artistId => {\n    const updatedArtistsByCategory = {\n      ...artistsByCategory\n    };\n    let isFavorite = false;\n\n    // Update local state\n    Object.keys(updatedArtistsByCategory).forEach(category => {\n      updatedArtistsByCategory[category] = updatedArtistsByCategory[category].map(artist => {\n        if (artist._id === artistId) {\n          isFavorite = !artist.isFavorite;\n          return {\n            ...artist,\n            isFavorite\n          };\n        }\n        return artist;\n      });\n    });\n    setArtistsByCategory(updatedArtistsByCategory);\n\n    // Update localStorage\n    const favoriteArtists = JSON.parse(localStorage.getItem(\"favoriteArtists\")) || {};\n    if (isFavorite) {\n      favoriteArtists[artistId] = true;\n    } else {\n      delete favoriteArtists[artistId];\n    }\n    localStorage.setItem(\"favoriteArtists\", JSON.stringify(favoriteArtists));\n  };\n\n  // const responsive = {\n  //   desktop: {\n  //     breakpoint: { max: 3000, min: 1024 },\n  //     items: 5,\n  //     slidesToSlide: 2,\n  //   },\n  //   tablet: {\n  //     breakpoint: { max: 1024, min: 464 },\n  //     items: 3,\n  //     slidesToSlide: 2,\n  //   },\n  //   mobile: {\n  //     breakpoint: { max: 464, min: 0 },\n  //     items: 2,\n  //     slidesToSlide: 1,\n  //   },\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainFront\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        id: \"explore\",\n        children: categories.filter(category => artistsByCategory[category.name] && artistsByCategory[category.name].length > 0).map(category => /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"artSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"my-2 artCat\",\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artistCarousel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: artistsByCategory[category.name].map(artist => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: artist.title\n              }, artist._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 5\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GSAPCarousel, {\n              items: artistsByCategory[category.name] // Pass artists\n              ,\n              toggleFavorite: toggleFavorite,\n              type: \"artist\" // Specify the type as \"artist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)]\n        }, category._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"My+/9r1rXJyVQynVkKRbgLV3wW8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","GSAPCarousel","Link","BsHeartFill","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","categories","setCategories","artistsByCategory","setArtistsByCategory","manualArtistOrder","Singers","DJ","Musicians","Trending","fetchData","categoriesResponse","get","process","env","REACT_APP_API_URL","fetchedCategories","data","artistsResponse","fetchedArtists","desiredOrder","sort","a","b","aIndex","indexOf","name","bIndex","storedFavorites","JSON","parse","localStorage","getItem","groupedArtists","forEach","category","sortedArtists","filter","artist","map","isFavorite","_id","order","sortedByManualOrder","includes","title","remainingArtists","error","console","toggleFavorite","artistId","updatedArtistsByCategory","Object","keys","favoriteArtists","setItem","stringify","children","className","id","length","fileName","_jsxFileName","lineNumber","columnNumber","items","type","_c","$RefreshReg$"],"sources":["D:/My Work/DubaiMusic/dubai-music/src/components/View/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// import MultiCarousel from \"react-multi-carousel\";\r\n// import \"react-multi-carousel/lib/styles.css\";\r\n\r\nimport GSAPCarousel from \"./GSAPCarousel\"; // Make sure to adjust the import path\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsHeartFill } from \"react-icons/bs\";\r\nimport \"./frontend.css\";\r\n\r\nconst Home = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [artistsByCategory, setArtistsByCategory] = useState({});\r\n  // const [setLoading] = useState(true);\r\n  // const [setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const manualArtistOrder = {\r\n      Singers: [\r\n        \"Jerome Deligero\",\r\n        \"Emily Peacock\",\r\n        \"Toi Dupras\",\r\n        \"Yvonne Park\",\r\n        \"Matt Palmer\",\r\n        \"Lina Ammor- Jevtic\",\r\n        \"Eirini Devitt\",\r\n        \"Juan Pablo Pellicer\",\r\n        \"Nick Pritchard\",\r\n        \"Mostafa Sattar\",\r\n        \"Jin Flora\",\r\n        \"Robbi McFaulds\",\r\n      ],\r\n      DJ: [\"Dadou\", \"Elena\", \"Yana Kulyk\", \"Raphy J\", \"DJ Stylez\", \"DJ Melyna\"],\r\n      Musicians: [\r\n        \"Ksenia Kot\",\r\n        \"Jose Ramon Nunez\",\r\n        \"Soren Lyng Hansen\",\r\n        \"Tatiana Durova\",\r\n        \"Aleksandra Dudek\",\r\n        \"Ulyana Goncharova\",\r\n      ],\r\n      Trending: [\r\n        \"Carrie Gibsonâ€™s NuvoSoul\",\r\n        \"Jaymie Deville\",\r\n        \"Chelsey Chantelle\",\r\n        \"Golden Collective\",\r\n        \"Abdallah Seleem\",\r\n        \"Dany Echemendia\",\r\n        \"Marvin Lee\",\r\n      ],\r\n    };\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const categoriesResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/categories`\r\n        );\r\n        const fetchedCategories = categoriesResponse.data;\r\n\r\n        const artistsResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/artists`\r\n        );\r\n        const fetchedArtists = artistsResponse.data;\r\n\r\n        const desiredOrder = [\r\n          \"Trending\",\r\n          \"Singers\",\r\n          \"Solo Looping Artists\",\r\n          \"Band\",\r\n          \"DJ\",\r\n          \"Musicians\",\r\n        ];\r\n\r\n        fetchedCategories.sort((a, b) => {\r\n          const aIndex = desiredOrder.indexOf(a.name);\r\n          const bIndex = desiredOrder.indexOf(b.name);\r\n          if (aIndex === -1 && bIndex === -1) return 0;\r\n          if (aIndex === -1) return 1;\r\n          if (bIndex === -1) return -1;\r\n          return aIndex - bIndex;\r\n        });\r\n\r\n        const storedFavorites =\r\n          JSON.parse(localStorage.getItem(\"favoriteArtists\")) || {};\r\n        const groupedArtists = {};\r\n\r\n        fetchedCategories.forEach((category) => {\r\n          let sortedArtists = fetchedArtists\r\n            .filter((artist) => artist.category === category.name)\r\n            .map((artist) => ({\r\n              ...artist,\r\n              isFavorite: storedFavorites[artist._id] || false,\r\n            }));\r\n\r\n          const order = manualArtistOrder[category.name];\r\n          if (order) {\r\n            // Sort based on manualArtistOrder\r\n            const sortedByManualOrder = sortedArtists\r\n              .filter((artist) => order.includes(artist.title))\r\n              .sort((a, b) => order.indexOf(a.title) - order.indexOf(b.title));\r\n\r\n            // Add artists not in the manualArtistOrder at the end\r\n            const remainingArtists = sortedArtists.filter(\r\n              (artist) => !order.includes(artist.title)\r\n            );\r\n\r\n            sortedArtists = [...sortedByManualOrder, ...remainingArtists];\r\n          }\r\n\r\n          groupedArtists[category.name] = sortedArtists;\r\n        });\r\n\r\n        setCategories(fetchedCategories);\r\n        setArtistsByCategory(groupedArtists);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  // Dependency array is now empty, no need to include `manualArtistOrder`\r\n\r\n  const toggleFavorite = (artistId) => {\r\n    const updatedArtistsByCategory = { ...artistsByCategory };\r\n    let isFavorite = false;\r\n\r\n    // Update local state\r\n    Object.keys(updatedArtistsByCategory).forEach((category) => {\r\n      updatedArtistsByCategory[category] = updatedArtistsByCategory[\r\n        category\r\n      ].map((artist) => {\r\n        if (artist._id === artistId) {\r\n          isFavorite = !artist.isFavorite;\r\n          return { ...artist, isFavorite };\r\n        }\r\n        return artist;\r\n      });\r\n    });\r\n\r\n    setArtistsByCategory(updatedArtistsByCategory);\r\n\r\n    // Update localStorage\r\n    const favoriteArtists =\r\n      JSON.parse(localStorage.getItem(\"favoriteArtists\")) || {};\r\n    if (isFavorite) {\r\n      favoriteArtists[artistId] = true;\r\n    } else {\r\n      delete favoriteArtists[artistId];\r\n    }\r\n    localStorage.setItem(\"favoriteArtists\", JSON.stringify(favoriteArtists));\r\n  };\r\n\r\n  // const responsive = {\r\n  //   desktop: {\r\n  //     breakpoint: { max: 3000, min: 1024 },\r\n  //     items: 5,\r\n  //     slidesToSlide: 2,\r\n  //   },\r\n  //   tablet: {\r\n  //     breakpoint: { max: 1024, min: 464 },\r\n  //     items: 3,\r\n  //     slidesToSlide: 2,\r\n  //   },\r\n  //   mobile: {\r\n  //     breakpoint: { max: 464, min: 0 },\r\n  //     items: 2,\r\n  //     slidesToSlide: 1,\r\n  //   },\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mainFront\">\r\n        <div className=\"container-fluid\" id=\"explore\">\r\n          {categories\r\n            .filter(\r\n              (category) =>\r\n                artistsByCategory[category.name] &&\r\n                artistsByCategory[category.name].length > 0\r\n            )\r\n            .map((category) => (\r\n              <section key={category._id} className=\"artSection\">\r\n                <h2 className=\"my-2 artCat\">{category.name}</h2>\r\n                <div className=\"artistCarousel\">\r\n                <div>\r\n  {artistsByCategory[category.name].map(artist => (\r\n    <p key={artist._id}>{artist.title}</p>\r\n  ))}\r\n</div>\r\n\r\n                  <GSAPCarousel\r\n                    items={artistsByCategory[category.name]} // Pass artists\r\n                    toggleFavorite={toggleFavorite}\r\n                    type=\"artist\" // Specify the type as \"artist\"\r\n                  />\r\n                </div>\r\n              </section>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}