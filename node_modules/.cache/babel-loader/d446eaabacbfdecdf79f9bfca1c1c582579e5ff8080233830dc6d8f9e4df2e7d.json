{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Work\\\\DubaiMusic\\\\dubai-music\\\\src\\\\components\\\\View\\\\Musicians.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BsHeartFill } from \"react-icons/bs\";\nimport { BsChevronCompactRight, BsChevronCompactLeft } from \"react-icons/bs\";\nimport { gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport axios from \"axios\";\nimport Preloader from './Preloader'; // Import the Preloader component\nimport \"./frontend.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(Draggable);\nconst Musicians = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [artistsByCategory, setArtistsByCategory] = useState({});\n  const [favorites, setFavorites] = useState([]);\n  const [showArrows, setShowArrows] = useState({\n    left: false,\n    right: false\n  });\n  const [loading, setLoading] = useState(true); // Loading state\n  const carouselRefs = useRef([]);\n  const manualArtistOrder = {\n    Singers: [\"Jerome Deligero\", \"Emily Peacock\", \"Toi Dupras\", \"Yvonne Park\", \"Matt Palmer\", \"Lina Ammor- Jevtic\", \"Eirini Devitt\", \"Juan Pablo Pellicer\", \"Nick Pritchard\", \"Mostafa Sattar\", \"Jin Flora\", \"Robbi McFaulds\"],\n    DJ: [\"Dadou\", \"Elena\", \"Yana Kulyk\", \"Raphy J\", \"DJ Stylez\", \"DJ Melyna\"],\n    Musicians: [\"Ksenia Kot\", \"Jose Ramon Nunez\", \"Soren Lyng Hansen\", \"Tatiana Durova\", \"Aleksandra Dudek\", \"Ulyana Goncharova\"],\n    Trending: [\"Carrie Gibsonâ€™s NuvoSoul\", \"Jaymie Deville\", \"Chelsey Chantelle\", \"Golden Collective\", \"Abdallah Seleem\", \"Dany Echemendia\", \"Marvin Lee\"]\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true); // Set loading to true before fetching data\n\n        const categoriesResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/categories`);\n        const fetchedCategories = categoriesResponse.data;\n        const artistsResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/artists`);\n        let fetchedArtists = artistsResponse.data;\n\n        // Filter only published artists\n        fetchedArtists = fetchedArtists.filter(artist => artist.isPublished === 'published');\n\n        // Define the desired order\n        const desiredOrder = [\"Trending\", \"Singers\", \"Solo Looping Artists\", \"Band\", \"DJ\", \"Musicians\"];\n\n        // Sort categories based on desiredOrder\n        const sortedCategories = fetchedCategories.sort((a, b) => {\n          const aIndex = desiredOrder.indexOf(a.name);\n          const bIndex = desiredOrder.indexOf(b.name);\n          if (aIndex === -1 && bIndex === -1) return 0;\n          if (aIndex === -1) return 1;\n          if (bIndex === -1) return -1;\n          return aIndex - bIndex;\n        });\n\n        // Load favorites from localStorage\n        const storedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n\n        // Ensure favorites are marked correctly\n        const groupedArtists = {};\n        sortedCategories.forEach(category => {\n          let sortedArtists = fetchedArtists.filter(artist => artist.category === category.name).map(artist => ({\n            ...artist,\n            isFavorite: storedFavorites.some(fav => fav._id === artist._id)\n          }));\n          const order = manualArtistOrder[category.name];\n          if (order) {\n            // Sort based on manualArtistOrder\n            const sortedByManualOrder = sortedArtists.filter(artist => order.includes(artist.title)).sort((a, b) => order.indexOf(a.title) - order.indexOf(b.title));\n\n            // Add artists not in the manualArtistOrder at the end\n            const remainingArtists = sortedArtists.filter(artist => !order.includes(artist.title));\n            sortedArtists = [...sortedByManualOrder, ...remainingArtists];\n          }\n          groupedArtists[category.name] = sortedArtists;\n        });\n\n        // Update state with sorted categories and artists\n        setCategories(sortedCategories);\n        setArtistsByCategory(groupedArtists);\n        setFavorites(storedFavorites);\n        setLoading(false); // Set loading to false when data is fetched successfully\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false); // Set loading to false even on error\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (carouselRefs.current.length > 0) {\n      const updateArrowVisibility = () => {\n        carouselRefs.current.forEach((carousel, index) => {\n          if (carousel) {\n            const scrollWidth = carousel.scrollWidth;\n            const clientWidth = carousel.clientWidth;\n            const scrollLeft = carousel.scrollLeft;\n            setShowArrows(prev => ({\n              ...prev,\n              [index]: {\n                left: scrollLeft > 0,\n                right: scrollLeft < scrollWidth - clientWidth\n              }\n            }));\n          }\n        });\n      };\n      updateArrowVisibility(); // Initial check\n\n      window.addEventListener(\"resize\", updateArrowVisibility);\n      return () => window.removeEventListener(\"resize\", updateArrowVisibility);\n    }\n  }, [artistsByCategory, favorites]);\n  useEffect(() => {\n    if (window.innerWidth <= 500 && carouselRefs.current.length > 0) {\n      carouselRefs.current.forEach(carousel => {\n        if (carousel) {\n          gsap.killTweensOf(carousel);\n          Draggable.create(carousel, {\n            type: \"x\",\n            bounds: {\n              minX: -carousel.scrollWidth + carousel.clientWidth,\n              maxX: 0\n            },\n            inertia: true,\n            throwProps: true,\n            edgeResistance: 0.65,\n            onThrowUpdate: () => {\n              gsap.to(carousel, {\n                x: carousel._gsap.x,\n                ease: \"power2.out\"\n              });\n            },\n            snap: {\n              x: value => Math.round(value / 16.67) * 200 // Adjust based on item width\n            }\n          });\n        }\n      });\n    }\n  }, [artistsByCategory, favorites]);\n  const toggleFavorite = artist => {\n    // Get the current favorites from localStorage\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n\n    // Check if the artist is already in favorites\n    const isAlreadyFavorite = savedFavorites.some(fav => fav._id === artist._id);\n\n    // Update favorites based on whether the artist is already a favorite\n    const updatedFavorites = isAlreadyFavorite ? savedFavorites.filter(fav => fav._id !== artist._id) : [...savedFavorites, artist];\n\n    // Update state and localStorage\n    setFavorites(updatedFavorites);\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n  };\n  const isFavorite = artist => {\n    return favorites.some(fav => fav._id === artist._id);\n  };\n  const scrollCarousel = (direction, index) => {\n    const carousel = carouselRefs.current[index];\n    if (carousel) {\n      // Assuming each slide is 16.67% of the carousel width\n      const slideWidth = carousel.clientWidth / 6; // Adjust the denominator based on the number of visible slides\n      const scrollAmount = slideWidth * 3 * direction; // Scroll by 3 slides\n\n      carousel.scrollBy({\n        left: scrollAmount,\n        behavior: \"smooth\"\n      });\n      setTimeout(() => {\n        const scrollWidth = carousel.scrollWidth;\n        const clientWidth = carousel.clientWidth;\n        const scrollLeft = carousel.scrollLeft;\n        setShowArrows(prev => ({\n          ...prev,\n          [index]: {\n            left: scrollLeft > 0,\n            right: scrollLeft < scrollWidth - clientWidth\n          }\n        }));\n      }, 500); // Delay to allow smooth scrolling to update visibility\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 12\n    }, this); // Show Preloader while loading data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainFront\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mainSection\",\n      children: categories.map((category, index) => {\n        var _showArrows$index, _showArrows$index2, _artistsByCategory$ca;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"categoryHeader\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"categoryArrows\",\n              children: [((_showArrows$index = showArrows[index]) === null || _showArrows$index === void 0 ? void 0 : _showArrows$index.left) && /*#__PURE__*/_jsxDEV(BsChevronCompactLeft, {\n                className: \"arrowLeft\",\n                onClick: () => scrollCarousel(-1, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), ((_showArrows$index2 = showArrows[index]) === null || _showArrows$index2 === void 0 ? void 0 : _showArrows$index2.right) && /*#__PURE__*/_jsxDEV(BsChevronCompactRight, {\n                className: \"arrowRight\",\n                onClick: () => scrollCarousel(1, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carouselWrapper\",\n            ref: el => carouselRefs.current[index] = el,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"carousel\",\n              children: (_artistsByCategory$ca = artistsByCategory[category.name]) === null || _artistsByCategory$ca === void 0 ? void 0 : _artistsByCategory$ca.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cardImage\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: artist.image,\n                    alt: artist.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `favoriteButton ${isFavorite(artist) ? \"active\" : \"\"}`,\n                    onClick: () => toggleFavorite(artist),\n                    children: /*#__PURE__*/_jsxDEV(BsHeartFill, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cardBody\",\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: artist.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this)]\n              }, artist._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, category._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(Musicians, \"7jmWeAQc+y5WID/5wyNSL8QwHdY=\");\n_c = Musicians;\nexport default Musicians;\nvar _c;\n$RefreshReg$(_c, \"Musicians\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Link","BsHeartFill","BsChevronCompactRight","BsChevronCompactLeft","gsap","Draggable","axios","Preloader","jsxDEV","_jsxDEV","registerPlugin","Musicians","_s","categories","setCategories","artistsByCategory","setArtistsByCategory","favorites","setFavorites","showArrows","setShowArrows","left","right","loading","setLoading","carouselRefs","manualArtistOrder","Singers","DJ","Trending","fetchData","categoriesResponse","get","process","env","REACT_APP_API_URL","fetchedCategories","data","artistsResponse","fetchedArtists","filter","artist","isPublished","desiredOrder","sortedCategories","sort","a","b","aIndex","indexOf","name","bIndex","storedFavorites","JSON","parse","localStorage","getItem","groupedArtists","forEach","category","sortedArtists","map","isFavorite","some","fav","_id","order","sortedByManualOrder","includes","title","remainingArtists","error","console","current","length","updateArrowVisibility","carousel","index","scrollWidth","clientWidth","scrollLeft","prev","window","addEventListener","removeEventListener","innerWidth","killTweensOf","create","type","bounds","minX","maxX","inertia","throwProps","edgeResistance","onThrowUpdate","to","x","_gsap","ease","snap","value","Math","round","toggleFavorite","savedFavorites","isAlreadyFavorite","updatedFavorites","setItem","stringify","scrollCarousel","direction","slideWidth","scrollAmount","scrollBy","behavior","setTimeout","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_showArrows$index","_showArrows$index2","_artistsByCategory$ca","onClick","ref","el","src","image","alt","_c","$RefreshReg$"],"sources":["D:/My Work/DubaiMusic/dubai-music/src/components/View/Musicians.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsHeartFill } from \"react-icons/bs\";\r\nimport { BsChevronCompactRight, BsChevronCompactLeft } from \"react-icons/bs\";\r\nimport { gsap } from \"gsap\";\r\nimport { Draggable } from \"gsap/Draggable\";\r\nimport axios from \"axios\";\r\nimport Preloader from './Preloader'; // Import the Preloader component\r\nimport \"./frontend.css\";\r\n\r\ngsap.registerPlugin(Draggable);\r\n\r\nconst Musicians = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [artistsByCategory, setArtistsByCategory] = useState({});\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [showArrows, setShowArrows] = useState({ left: false, right: false });\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n  const carouselRefs = useRef([]);\r\n\r\n  const manualArtistOrder = {\r\n    Singers: [\r\n      \"Jerome Deligero\",\r\n      \"Emily Peacock\",\r\n      \"Toi Dupras\",\r\n      \"Yvonne Park\",\r\n      \"Matt Palmer\",\r\n      \"Lina Ammor- Jevtic\",\r\n      \"Eirini Devitt\",\r\n      \"Juan Pablo Pellicer\",\r\n      \"Nick Pritchard\",\r\n      \"Mostafa Sattar\",\r\n      \"Jin Flora\",\r\n      \"Robbi McFaulds\",\r\n    ],\r\n    DJ: [\"Dadou\", \"Elena\", \"Yana Kulyk\", \"Raphy J\", \"DJ Stylez\", \"DJ Melyna\"],\r\n    Musicians: [\r\n      \"Ksenia Kot\",\r\n      \"Jose Ramon Nunez\",\r\n      \"Soren Lyng Hansen\",\r\n      \"Tatiana Durova\",\r\n      \"Aleksandra Dudek\",\r\n      \"Ulyana Goncharova\",\r\n    ],\r\n    Trending: [\r\n      \"Carrie Gibsonâ€™s NuvoSoul\",\r\n      \"Jaymie Deville\",\r\n      \"Chelsey Chantelle\",\r\n      \"Golden Collective\",\r\n      \"Abdallah Seleem\",\r\n      \"Dany Echemendia\",\r\n      \"Marvin Lee\",\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true); // Set loading to true before fetching data\r\n\r\n        const categoriesResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/categories`\r\n        );\r\n        const fetchedCategories = categoriesResponse.data;\r\n  \r\n        const artistsResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/artists`\r\n        );\r\n        let fetchedArtists = artistsResponse.data;\r\n  \r\n        // Filter only published artists\r\n        fetchedArtists = fetchedArtists.filter(artist => artist.isPublished === 'published');\r\n  \r\n        // Define the desired order\r\n        const desiredOrder = [\r\n          \"Trending\",\r\n          \"Singers\",\r\n          \"Solo Looping Artists\",\r\n          \"Band\",\r\n          \"DJ\",\r\n          \"Musicians\",\r\n        ];\r\n  \r\n        // Sort categories based on desiredOrder\r\n        const sortedCategories = fetchedCategories.sort((a, b) => {\r\n          const aIndex = desiredOrder.indexOf(a.name);\r\n          const bIndex = desiredOrder.indexOf(b.name);\r\n          if (aIndex === -1 && bIndex === -1) return 0;\r\n          if (aIndex === -1) return 1;\r\n          if (bIndex === -1) return -1;\r\n          return aIndex - bIndex;\r\n        });\r\n  \r\n        // Load favorites from localStorage\r\n        const storedFavorites =\r\n          JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n  \r\n        // Ensure favorites are marked correctly\r\n        const groupedArtists = {};\r\n  \r\n        sortedCategories.forEach((category) => {\r\n          let sortedArtists = fetchedArtists\r\n            .filter((artist) => artist.category === category.name)\r\n            .map((artist) => ({\r\n              ...artist,\r\n              isFavorite: storedFavorites.some((fav) => fav._id === artist._id),\r\n            }));\r\n  \r\n          const order = manualArtistOrder[category.name];\r\n          if (order) {\r\n            // Sort based on manualArtistOrder\r\n            const sortedByManualOrder = sortedArtists\r\n              .filter((artist) => order.includes(artist.title))\r\n              .sort((a, b) => order.indexOf(a.title) - order.indexOf(b.title));\r\n  \r\n            // Add artists not in the manualArtistOrder at the end\r\n            const remainingArtists = sortedArtists.filter(\r\n              (artist) => !order.includes(artist.title)\r\n            );\r\n  \r\n            sortedArtists = [...sortedByManualOrder, ...remainingArtists];\r\n          }\r\n  \r\n          groupedArtists[category.name] = sortedArtists;\r\n        });\r\n  \r\n        // Update state with sorted categories and artists\r\n        setCategories(sortedCategories);\r\n        setArtistsByCategory(groupedArtists);\r\n        setFavorites(storedFavorites);\r\n        setLoading(false); // Set loading to false when data is fetched successfully\r\n  \r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false); // Set loading to false even on error\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, []);\r\n  \r\n\r\n  useEffect(() => {\r\n    if (carouselRefs.current.length > 0) {\r\n      const updateArrowVisibility = () => {\r\n        carouselRefs.current.forEach((carousel, index) => {\r\n          if (carousel) {\r\n            const scrollWidth = carousel.scrollWidth;\r\n            const clientWidth = carousel.clientWidth;\r\n            const scrollLeft = carousel.scrollLeft;\r\n\r\n            setShowArrows((prev) => ({\r\n              ...prev,\r\n              [index]: {\r\n                left: scrollLeft > 0,\r\n                right: scrollLeft < scrollWidth - clientWidth,\r\n              },\r\n            }));\r\n          }\r\n        });\r\n      };\r\n\r\n      updateArrowVisibility(); // Initial check\r\n\r\n      window.addEventListener(\"resize\", updateArrowVisibility);\r\n      return () => window.removeEventListener(\"resize\", updateArrowVisibility);\r\n    }\r\n  }, [artistsByCategory, favorites]);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth <= 500 && carouselRefs.current.length > 0) {\r\n      carouselRefs.current.forEach((carousel) => {\r\n        if (carousel) {\r\n          gsap.killTweensOf(carousel);\r\n\r\n          Draggable.create(carousel, {\r\n            type: \"x\",\r\n            bounds: {\r\n              minX: -carousel.scrollWidth + carousel.clientWidth,\r\n              maxX: 0,\r\n            },\r\n            inertia: true,\r\n            throwProps: true,\r\n            edgeResistance: 0.65,\r\n            onThrowUpdate: () => {\r\n              gsap.to(carousel, { x: carousel._gsap.x, ease: \"power2.out\" });\r\n            },\r\n            snap: {\r\n              x: (value) => Math.round(value / 16.67) * 200, // Adjust based on item width\r\n            },\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [artistsByCategory, favorites]);\r\n\r\n  const toggleFavorite = (artist) => {\r\n    // Get the current favorites from localStorage\r\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n\r\n    // Check if the artist is already in favorites\r\n    const isAlreadyFavorite = savedFavorites.some(\r\n      (fav) => fav._id === artist._id\r\n    );\r\n\r\n    // Update favorites based on whether the artist is already a favorite\r\n    const updatedFavorites = isAlreadyFavorite\r\n      ? savedFavorites.filter((fav) => fav._id !== artist._id)\r\n      : [...savedFavorites, artist];\r\n\r\n    // Update state and localStorage\r\n    setFavorites(updatedFavorites);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  const isFavorite = (artist) => {\r\n    return favorites.some((fav) => fav._id === artist._id);\r\n  };\r\n\r\n  const scrollCarousel = (direction, index) => {\r\n    const carousel = carouselRefs.current[index];\r\n    if (carousel) {\r\n      // Assuming each slide is 16.67% of the carousel width\r\n      const slideWidth = carousel.clientWidth / 6; // Adjust the denominator based on the number of visible slides\r\n      const scrollAmount = slideWidth * 3 * direction; // Scroll by 3 slides\r\n\r\n      carousel.scrollBy({\r\n        left: scrollAmount,\r\n        behavior: \"smooth\",\r\n      });\r\n\r\n      setTimeout(() => {\r\n        const scrollWidth = carousel.scrollWidth;\r\n        const clientWidth = carousel.clientWidth;\r\n        const scrollLeft = carousel.scrollLeft;\r\n\r\n        setShowArrows((prev) => ({\r\n          ...prev,\r\n          [index]: {\r\n            left: scrollLeft > 0,\r\n            right: scrollLeft < scrollWidth - clientWidth,\r\n          },\r\n        }));\r\n      }, 500); // Delay to allow smooth scrolling to update visibility\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <Preloader />; // Show Preloader while loading data\r\n  }\r\n\r\n  return (\r\n    <div className=\"mainFront\">\r\n      {/* Hero Section */}\r\n\r\n      <section className=\"mainSection\">\r\n        {categories.map((category, index) => (\r\n          <div key={category._id} className=\"category\">\r\n            <div className=\"categoryHeader\">\r\n              <h2>{category.name}</h2>\r\n              <div className=\"categoryArrows\">\r\n                {showArrows[index]?.left && (\r\n                  <BsChevronCompactLeft\r\n                    className=\"arrowLeft\"\r\n                    onClick={() => scrollCarousel(-1, index)}\r\n                  />\r\n                )}\r\n                {showArrows[index]?.right && (\r\n                  <BsChevronCompactRight\r\n                    className=\"arrowRight\"\r\n                    onClick={() => scrollCarousel(1, index)}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"carouselWrapper\" ref={(el) => (carouselRefs.current[index] = el)}>\r\n              <div className=\"carousel\">\r\n                {artistsByCategory[category.name]?.map((artist) => (\r\n                  <div key={artist._id} className=\"card\">\r\n                    <div className=\"cardImage\">\r\n                      <img src={artist.image} alt={artist.name} />\r\n                      <button\r\n                        className={`favoriteButton ${isFavorite(artist) ? \"active\" : \"\"}`}\r\n                        onClick={() => toggleFavorite(artist)}\r\n                      >\r\n                        <BsHeartFill />\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"cardBody\">\r\n                      <h4>{artist.title}</h4>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Musicians;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}