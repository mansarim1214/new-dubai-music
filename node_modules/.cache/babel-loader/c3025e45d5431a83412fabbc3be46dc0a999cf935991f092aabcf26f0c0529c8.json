{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Work\\\\DubaiMusic\\\\dubai-music\\\\src\\\\components\\\\View\\\\MusicStore.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./frontend.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicStore = () => {\n  _s();\n  const [stores, setStores] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/musicstore`);\n        const fetchedStores = response.data;\n        setStores(storesWithFavorites);\n        setFavorites(storedFavorites);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const toggleFavorite = store => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n    const isAlreadyFavorite = savedFavorites.some(fav => fav._id === store._id);\n    const updatedFavorites = isAlreadyFavorite ? savedFavorites.filter(fav => fav._id !== store._id) : [...savedFavorites, store];\n    setFavorites(updatedFavorites);\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n    const updatedStores = stores.map(s => s._id === store._id ? {\n      ...s,\n      isFavorite: !isAlreadyFavorite\n    } : s);\n    setStores(updatedStores);\n  };\n  const isFavorite = store => {\n    return favorites.some(fav => fav._id === store._id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainFront\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      id: \"explore\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"artSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"my-2 artCat\",\n          children: \"Music Stores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"storeGrid\" // Grid layout\n          ,\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(6, 1fr)\",\n            // 6 items per row\n            gap: \"20px\"\n          },\n          children: stores.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"storeCard\",\n            style: {\n              textAlign: \"center\",\n              padding: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/music-store/${store._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"storeImage\",\n                children: [store.logo && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${process.env.REACT_APP_API_URL}/${store.logo}`,\n                  alt: store.name,\n                  width: \"100%\",\n                  loading: \"lazy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"storeContent\",\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"storeTitle\",\n                    children: store.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"favoriteIcon\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleFavorite(store),\n                children: isFavorite(store) ? /*#__PURE__*/_jsxDEV(BsHeartFill, {\n                  className: \"favorited\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(BsHeartFill, {\n                  className: \"heartIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, store._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicStore, \"9eWA3iE2Dz5ReR9eY7oAKBm8LZY=\");\n_c = MusicStore;\nexport default MusicStore;\nvar _c;\n$RefreshReg$(_c, \"MusicStore\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","jsxDEV","_jsxDEV","MusicStore","_s","stores","setStores","fetchData","response","get","process","env","REACT_APP_API_URL","fetchedStores","data","storesWithFavorites","setFavorites","storedFavorites","error","console","toggleFavorite","store","savedFavorites","JSON","parse","localStorage","getItem","isAlreadyFavorite","some","fav","_id","updatedFavorites","filter","setItem","stringify","updatedStores","map","s","isFavorite","favorites","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","textAlign","padding","to","logo","src","alt","name","width","loading","onClick","BsHeartFill","_c","$RefreshReg$"],"sources":["D:/My Work/DubaiMusic/dubai-music/src/components/View/MusicStore.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./frontend.css\";\r\n\r\nconst MusicStore = () => {\r\n  const [stores, setStores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/musicstore`\r\n        );\r\n        const fetchedStores = response.data;\r\n\r\n\r\n  \r\n\r\n        setStores(storesWithFavorites);\r\n        setFavorites(storedFavorites);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const toggleFavorite = (store) => {\r\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n    const isAlreadyFavorite = savedFavorites.some((fav) => fav._id === store._id);\r\n\r\n    const updatedFavorites = isAlreadyFavorite\r\n      ? savedFavorites.filter((fav) => fav._id !== store._id)\r\n      : [...savedFavorites, store];\r\n\r\n    setFavorites(updatedFavorites);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\r\n\r\n    const updatedStores = stores.map((s) =>\r\n      s._id === store._id ? { ...s, isFavorite: !isAlreadyFavorite } : s\r\n    );\r\n    setStores(updatedStores);\r\n  };\r\n\r\n  const isFavorite = (store) => {\r\n    return favorites.some((fav) => fav._id === store._id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mainFront\">\r\n      <div className=\"container-fluid\" id=\"explore\">\r\n        <section className=\"artSection\">\r\n          <h2 className=\"my-2 artCat\">Music Stores</h2>\r\n          <div\r\n            className=\"storeGrid\" // Grid layout\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"repeat(6, 1fr)\", // 6 items per row\r\n              gap: \"20px\",\r\n            }}\r\n          >\r\n            {stores.map((store) => (\r\n              <div\r\n                key={store._id}\r\n                className=\"storeCard\"\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                }}\r\n              >\r\n                <Link to={`/music-store/${store._id}`}>\r\n                  <div className=\"storeImage\">\r\n                    {store.logo && (\r\n                      <img\r\n                        src={`${process.env.REACT_APP_API_URL}/${store.logo}`}\r\n                        alt={store.name}\r\n                        width=\"100%\"\r\n                        loading=\"lazy\"\r\n                      />\r\n                    )}\r\n                    <div className=\"storeContent\">\r\n                      <h4 className=\"storeTitle\">{store.name}</h4>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n\r\n                {/* Add heart icon for favorites */}\r\n                <div className=\"favoriteIcon\">\r\n                  <button onClick={() => toggleFavorite(store)}>\r\n                    {isFavorite(store) ? (\r\n                      <BsHeartFill className=\"favorited\" />\r\n                    ) : (\r\n                      <BsHeartFill className=\"heartIcon\" />\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MusicStore;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC9B,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,iBAClC,CAAC;QACD,MAAMC,aAAa,GAAGL,QAAQ,CAACM,IAAI;QAKnCR,SAAS,CAACS,mBAAmB,CAAC;QAC9BC,YAAY,CAACC,eAAe,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDX,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC1E,MAAMC,iBAAiB,GAAGL,cAAc,CAACM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,GAAG,KAAKT,KAAK,CAACS,GAAG,CAAC;IAE7E,MAAMC,gBAAgB,GAAGJ,iBAAiB,GACtCL,cAAc,CAACU,MAAM,CAAEH,GAAG,IAAKA,GAAG,CAACC,GAAG,KAAKT,KAAK,CAACS,GAAG,CAAC,GACrD,CAAC,GAAGR,cAAc,EAAED,KAAK,CAAC;IAE9BL,YAAY,CAACe,gBAAgB,CAAC;IAC9BN,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEV,IAAI,CAACW,SAAS,CAACH,gBAAgB,CAAC,CAAC;IAEnE,MAAMI,aAAa,GAAG9B,MAAM,CAAC+B,GAAG,CAAEC,CAAC,IACjCA,CAAC,CAACP,GAAG,KAAKT,KAAK,CAACS,GAAG,GAAG;MAAE,GAAGO,CAAC;MAAEC,UAAU,EAAE,CAACX;IAAkB,CAAC,GAAGU,CACnE,CAAC;IACD/B,SAAS,CAAC6B,aAAa,CAAC;EAC1B,CAAC;EAED,MAAMG,UAAU,GAAIjB,KAAK,IAAK;IAC5B,OAAOkB,SAAS,CAACX,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,GAAG,KAAKT,KAAK,CAACS,GAAG,CAAC;EACvD,CAAC;EAED,oBACE5B,OAAA;IAAKsC,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBvC,OAAA;MAAKsC,SAAS,EAAC,iBAAiB;MAACE,EAAE,EAAC,SAAS;MAAAD,QAAA,eAC3CvC,OAAA;QAASsC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAC7BvC,OAAA;UAAIsC,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7C5C,OAAA;UACEsC,SAAS,EAAC,WAAW,CAAC;UAAA;UACtBO,KAAK,EAAE;YACLC,OAAO,EAAE,MAAM;YACfC,mBAAmB,EAAE,gBAAgB;YAAE;YACvCC,GAAG,EAAE;UACP,CAAE;UAAAT,QAAA,EAEDpC,MAAM,CAAC+B,GAAG,CAAEf,KAAK,iBAChBnB,OAAA;YAEEsC,SAAS,EAAC,WAAW;YACrBO,KAAK,EAAE;cACLI,SAAS,EAAE,QAAQ;cACnBC,OAAO,EAAE;YACX,CAAE;YAAAX,QAAA,gBAEFvC,OAAA,CAACH,IAAI;cAACsD,EAAE,EAAE,gBAAgBhC,KAAK,CAACS,GAAG,EAAG;cAAAW,QAAA,eACpCvC,OAAA;gBAAKsC,SAAS,EAAC,YAAY;gBAAAC,QAAA,GACxBpB,KAAK,CAACiC,IAAI,iBACTpD,OAAA;kBACEqD,GAAG,EAAE,GAAG7C,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAIS,KAAK,CAACiC,IAAI,EAAG;kBACtDE,GAAG,EAAEnC,KAAK,CAACoC,IAAK;kBAChBC,KAAK,EAAC,MAAM;kBACZC,OAAO,EAAC;gBAAM;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACf,CACF,eACD5C,OAAA;kBAAKsC,SAAS,EAAC,cAAc;kBAAAC,QAAA,eAC3BvC,OAAA;oBAAIsC,SAAS,EAAC,YAAY;oBAAAC,QAAA,EAAEpB,KAAK,CAACoC;kBAAI;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eAGP5C,OAAA;cAAKsC,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC3BvC,OAAA;gBAAQ0D,OAAO,EAAEA,CAAA,KAAMxC,cAAc,CAACC,KAAK,CAAE;gBAAAoB,QAAA,EAC1CH,UAAU,CAACjB,KAAK,CAAC,gBAChBnB,OAAA,CAAC2D,WAAW;kBAACrB,SAAS,EAAC;gBAAW;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAErC5C,OAAA,CAAC2D,WAAW;kBAACrB,SAAS,EAAC;gBAAW;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cACrC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA,GAhCDzB,KAAK,CAACS,GAAG;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiCX,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1C,EAAA,CApGID,UAAU;AAAA2D,EAAA,GAAV3D,UAAU;AAsGhB,eAAeA,UAAU;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}