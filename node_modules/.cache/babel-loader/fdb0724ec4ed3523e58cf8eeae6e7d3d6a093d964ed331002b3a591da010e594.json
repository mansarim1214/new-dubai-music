{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Work\\\\DubaiMusic\\\\dubai-music\\\\src\\\\components\\\\View\\\\Musicians.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BsHeartFill } from \"react-icons/bs\";\nimport { BsChevronCompactRight, BsChevronCompactLeft } from \"react-icons/bs\";\nimport { gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport axios from \"axios\";\nimport Preloader from './Preloader';\nimport \"./frontend.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(Draggable);\nconst Musicians = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [artistsByCategory, setArtistsByCategory] = useState({});\n  const [favorites, setFavorites] = useState([]);\n  const [showArrows, setShowArrows] = useState({\n    left: false,\n    right: false\n  });\n  const carouselRefs = useRef([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      const manualArtistOrder = {\n        Singers: [\"Jerome Deligero\", \"Emily Peacock\", \"Toi Dupras\", \"Yvonne Park\", \"Matt Palmer\", \"Lina Ammor- Jevtic\", \"Eirini Devitt\", \"Juan Pablo Pellicer\", \"Nick Pritchard\", \"Mostafa Sattar\", \"Jin Flora\", \"Robbi McFaulds\"],\n        DJ: [\"Dadou\", \"Elena\", \"Yana Kulyk\", \"Raphy J\", \"DJ Stylez\", \"DJ Melyna\"],\n        Musicians: [\"Ksenia Kot\", \"Jose Ramon Nunez\", \"Soren Lyng Hansen\", \"Tatiana Durova\", \"Aleksandra Dudek\", \"Ulyana Goncharova\"],\n        Trending: [\"Carrie Gibson’s NuvoSoul\", \"Jaymie Deville\", \"Chelsey Chantelle\", \"Golden Collective\", \"Abdallah Seleem\", \"Dany Echemendia\", \"Marvin Lee\"]\n      };\n      try {\n        setLoading(true);\n        const categoriesResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/categories`);\n        const fetchedCategories = categoriesResponse.data;\n        const artistsResponse = await axios.get(`${process.env.REACT_APP_API_URL}/api/artists`);\n        let fetchedArtists = artistsResponse.data;\n\n        // Filter only published artists\n        fetchedArtists = fetchedArtists.filter(artist => artist.isPublished === 'published');\n\n        // Define the desired order\n        const desiredOrder = [\"Trending\", \"Singers\", \"Solo Looping Artists\", \"Band\", \"DJ\", \"Musicians\"];\n\n        // Sort categories based on desiredOrder\n        const sortedCategories = fetchedCategories.sort((a, b) => {\n          const aIndex = desiredOrder.indexOf(a.name);\n          const bIndex = desiredOrder.indexOf(b.name);\n          if (aIndex === -1 && bIndex === -1) return 0;\n          if (aIndex === -1) return 1;\n          if (bIndex === -1) return -1;\n          return aIndex - bIndex;\n        });\n\n        // Load favorites from localStorage\n        const storedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n\n        // Ensure favorites are marked correctly\n        const groupedArtists = {};\n        sortedCategories.forEach(category => {\n          let sortedArtists = fetchedArtists.filter(artist => artist.category === category.name).map(artist => ({\n            ...artist,\n            isFavorite: storedFavorites.some(fav => fav._id === artist._id)\n          }));\n          const order = manualArtistOrder[category.name];\n          if (order) {\n            // Sort based on manualArtistOrder\n            const sortedByManualOrder = sortedArtists.filter(artist => order.includes(artist.title)).sort((a, b) => order.indexOf(a.title) - order.indexOf(b.title));\n\n            // Add artists not in the manualArtistOrder at the end\n            const remainingArtists = sortedArtists.filter(artist => !order.includes(artist.title));\n            sortedArtists = [...sortedByManualOrder, ...remainingArtists];\n          }\n          groupedArtists[category.name] = sortedArtists;\n        });\n\n        // Update state with sorted categories and artists\n        setCategories(sortedCategories);\n        setArtistsByCategory(groupedArtists);\n        setFavorites(storedFavorites);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Other hooks and functions...\n  const toggleFavorite = artist => {\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n    const isAlreadyFavorite = savedFavorites.some(fav => fav._id === artist._id);\n    const updatedFavorites = isAlreadyFavorite ? savedFavorites.filter(fav => fav._id !== artist._id) : [...savedFavorites, artist];\n    setFavorites(updatedFavorites);\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n  };\n  const isFavorite = artist => favorites.some(fav => fav._id === artist._id);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainFront\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid p-0\",\n      id: \"explore\",\n      children: categories.filter(category => {\n        var _artistsByCategory$ca;\n        return ((_artistsByCategory$ca = artistsByCategory[category.name]) === null || _artistsByCategory$ca === void 0 ? void 0 : _artistsByCategory$ca.length) > 0;\n      }).map((category, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"artSection\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this)\n      }, category._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(Musicians, \"JJYcnEgk8D0vtYcuQz+7XSgvhX4=\");\n_c = Musicians;\nexport default Musicians;\nvar _c;\n$RefreshReg$(_c, \"Musicians\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Link","BsHeartFill","BsChevronCompactRight","BsChevronCompactLeft","gsap","Draggable","axios","Preloader","jsxDEV","_jsxDEV","registerPlugin","Musicians","_s","categories","setCategories","artistsByCategory","setArtistsByCategory","favorites","setFavorites","showArrows","setShowArrows","left","right","carouselRefs","loading","setLoading","fetchData","manualArtistOrder","Singers","DJ","Trending","categoriesResponse","get","process","env","REACT_APP_API_URL","fetchedCategories","data","artistsResponse","fetchedArtists","filter","artist","isPublished","desiredOrder","sortedCategories","sort","a","b","aIndex","indexOf","name","bIndex","storedFavorites","JSON","parse","localStorage","getItem","groupedArtists","forEach","category","sortedArtists","map","isFavorite","some","fav","_id","order","sortedByManualOrder","includes","title","remainingArtists","error","console","toggleFavorite","savedFavorites","isAlreadyFavorite","updatedFavorites","setItem","stringify","fileName","_jsxFileName","lineNumber","columnNumber","className","children","id","_artistsByCategory$ca","length","index","_c","$RefreshReg$"],"sources":["D:/My Work/DubaiMusic/dubai-music/src/components/View/Musicians.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsHeartFill } from \"react-icons/bs\";\r\nimport { BsChevronCompactRight, BsChevronCompactLeft } from \"react-icons/bs\";\r\nimport { gsap } from \"gsap\";\r\nimport { Draggable } from \"gsap/Draggable\";\r\nimport axios from \"axios\";\r\nimport Preloader from './Preloader';\r\nimport \"./frontend.css\";\r\n\r\ngsap.registerPlugin(Draggable);\r\n\r\nconst Musicians = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [artistsByCategory, setArtistsByCategory] = useState({});\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [showArrows, setShowArrows] = useState({ left: false, right: false });\r\n  const carouselRefs = useRef([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const manualArtistOrder = {\r\n        Singers: [\r\n          \"Jerome Deligero\",\r\n          \"Emily Peacock\",\r\n          \"Toi Dupras\",\r\n          \"Yvonne Park\",\r\n          \"Matt Palmer\",\r\n          \"Lina Ammor- Jevtic\",\r\n          \"Eirini Devitt\",\r\n          \"Juan Pablo Pellicer\",\r\n          \"Nick Pritchard\",\r\n          \"Mostafa Sattar\",\r\n          \"Jin Flora\",\r\n          \"Robbi McFaulds\",\r\n        ],\r\n        DJ: [\"Dadou\", \"Elena\", \"Yana Kulyk\", \"Raphy J\", \"DJ Stylez\", \"DJ Melyna\"],\r\n        Musicians: [\r\n          \"Ksenia Kot\",\r\n          \"Jose Ramon Nunez\",\r\n          \"Soren Lyng Hansen\",\r\n          \"Tatiana Durova\",\r\n          \"Aleksandra Dudek\",\r\n          \"Ulyana Goncharova\",\r\n        ],\r\n        Trending: [\r\n          \"Carrie Gibson’s NuvoSoul\",\r\n          \"Jaymie Deville\",\r\n          \"Chelsey Chantelle\",\r\n          \"Golden Collective\",\r\n          \"Abdallah Seleem\",\r\n          \"Dany Echemendia\",\r\n          \"Marvin Lee\",\r\n        ],\r\n      };\r\n\r\n      try {\r\n        setLoading(true);\r\n        const categoriesResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/categories`\r\n        );\r\n        const fetchedCategories = categoriesResponse.data;\r\n\r\n        const artistsResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/artists`\r\n        );\r\n        let fetchedArtists = artistsResponse.data;\r\n\r\n        // Filter only published artists\r\n        fetchedArtists = fetchedArtists.filter(artist => artist.isPublished === 'published');\r\n\r\n        // Define the desired order\r\n        const desiredOrder = [\r\n          \"Trending\",\r\n          \"Singers\",\r\n          \"Solo Looping Artists\",\r\n          \"Band\",\r\n          \"DJ\",\r\n          \"Musicians\",\r\n        ];\r\n\r\n        // Sort categories based on desiredOrder\r\n        const sortedCategories = fetchedCategories.sort((a, b) => {\r\n          const aIndex = desiredOrder.indexOf(a.name);\r\n          const bIndex = desiredOrder.indexOf(b.name);\r\n          if (aIndex === -1 && bIndex === -1) return 0;\r\n          if (aIndex === -1) return 1;\r\n          if (bIndex === -1) return -1;\r\n          return aIndex - bIndex;\r\n        });\r\n\r\n        // Load favorites from localStorage\r\n        const storedFavorites =\r\n          JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n\r\n        // Ensure favorites are marked correctly\r\n        const groupedArtists = {};\r\n\r\n        sortedCategories.forEach((category) => {\r\n          let sortedArtists = fetchedArtists\r\n            .filter((artist) => artist.category === category.name)\r\n            .map((artist) => ({\r\n              ...artist,\r\n              isFavorite: storedFavorites.some((fav) => fav._id === artist._id),\r\n            }));\r\n\r\n          const order = manualArtistOrder[category.name];\r\n          if (order) {\r\n            // Sort based on manualArtistOrder\r\n            const sortedByManualOrder = sortedArtists\r\n              .filter((artist) => order.includes(artist.title))\r\n              .sort((a, b) => order.indexOf(a.title) - order.indexOf(b.title));\r\n\r\n            // Add artists not in the manualArtistOrder at the end\r\n            const remainingArtists = sortedArtists.filter(\r\n              (artist) => !order.includes(artist.title)\r\n            );\r\n\r\n            sortedArtists = [...sortedByManualOrder, ...remainingArtists];\r\n          }\r\n\r\n          groupedArtists[category.name] = sortedArtists;\r\n        });\r\n\r\n        // Update state with sorted categories and artists\r\n        setCategories(sortedCategories);\r\n        setArtistsByCategory(groupedArtists);\r\n        setFavorites(storedFavorites);\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Other hooks and functions...\r\n  const toggleFavorite = (artist) => {\r\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n    const isAlreadyFavorite = savedFavorites.some((fav) => fav._id === artist._id);\r\n    const updatedFavorites = isAlreadyFavorite\r\n      ? savedFavorites.filter((fav) => fav._id !== artist._id)\r\n      : [...savedFavorites, artist];\r\n\r\n    setFavorites(updatedFavorites);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  const isFavorite = (artist) => favorites.some((fav) => fav._id === artist._id);\r\n\r\n  if (loading) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"mainFront\">\r\n      <div className=\"container-fluid p-0\" id=\"explore\">\r\n        {categories\r\n          .filter((category) =>\r\n            artistsByCategory[category.name]?.length > 0\r\n          )\r\n          .map((category, index) => (\r\n            <section key={category._id} className=\"artSection\">\r\n              <h2>{category.name}</h2>\r\n              {/* Render artists... */}\r\n            </section>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Musicians;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}