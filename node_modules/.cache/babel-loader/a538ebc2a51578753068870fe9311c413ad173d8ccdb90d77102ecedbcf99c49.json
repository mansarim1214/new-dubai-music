{"ast":null,"code":"import React,{useEffect,useState,useRef}from\"react\";import{Link}from\"react-router-dom\";import{BsHeartFill}from\"react-icons/bs\";import{BsChevronCompactRight,BsChevronCompactLeft}from\"react-icons/bs\";import{gsap}from\"gsap\";import{Draggable}from\"gsap/Draggable\";import\"./frontend.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";gsap.registerPlugin(Draggable);const Favorites=()=>{const[favorites,setFavorites]=useState([]);const[showArrows,setShowArrows]=useState({left:false,right:false});const carouselRef=useRef(null);useEffect(()=>{const savedFavorites=JSON.parse(localStorage.getItem(\"favorites\"))||[];setFavorites(savedFavorites);},[]);// Empty dependency array to run only on component mount\nuseEffect(()=>{if(carouselRef.current){const updateArrowVisibility=()=>{if(carouselRef.current){const scrollWidth=carouselRef.current.scrollWidth;const clientWidth=carouselRef.current.clientWidth;const scrollLeft=carouselRef.current.scrollLeft;setShowArrows({left:scrollLeft>0,right:scrollLeft<scrollWidth-clientWidth});}};updateArrowVisibility();// Initial check\nwindow.addEventListener(\"resize\",updateArrowVisibility);return()=>window.removeEventListener(\"resize\",updateArrowVisibility);}},[favorites]);// Dependency on favorites to recalculate arrow visibility when favorites change\nuseEffect(()=>{if(window.innerWidth<=500&&carouselRef.current){gsap.killTweensOf(carouselRef.current);Draggable.create(carouselRef.current,{type:\"x\",bounds:{minX:-carouselRef.current.scrollWidth+carouselRef.current.clientWidth,maxX:0},inertia:true,throwProps:true,edgeResistance:0.65,onThrowUpdate:()=>{gsap.to(carouselRef.current,{x:carouselRef.current._gsap.x,ease:\"power2.out\"});},snap:{x:value=>Math.round(value/16.67)*200// Adjust based on item width\n}});}},[favorites]);// Ensure this runs when favorites change, but not continuously\nconst toggleFavorite=artist=>{const updatedFavorites=favorites.filter(fav=>fav._id!==artist._id);setFavorites(updatedFavorites);localStorage.setItem(\"favorites\",JSON.stringify(updatedFavorites));};const scrollCarousel=direction=>{if(carouselRef.current){const scrollAmount=300*direction;// Adjust the scroll amount as needed\ncarouselRef.current.scrollBy({left:scrollAmount,behavior:\"smooth\"});setTimeout(()=>{const scrollWidth=carouselRef.current.scrollWidth;const clientWidth=carouselRef.current.clientWidth;const scrollLeft=carouselRef.current.scrollLeft;setShowArrows({left:scrollLeft>0,right:scrollLeft<scrollWidth-clientWidth});},500);// Delay to allow smooth scrolling to update visibility\n}};return/*#__PURE__*/_jsx(\"div\",{className:\"bg-custom\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid p-0\",id:\"favorites\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mb-3 fav-title\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Artists You've Favorited\"})}),showArrows.left&&/*#__PURE__*/_jsx(\"button\",{className:\"arrow left react-multiple-carousel__arrow\",onClick:()=>scrollCarousel(-1)// Scroll left\n,children:/*#__PURE__*/_jsx(BsChevronCompactLeft,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"artistCarousel\",ref:carouselRef,style:{display:\"flex\",overflow:\"hidden\",width:\"100%\"},children:favorites.length>0?favorites.map(artist=>/*#__PURE__*/_jsxs(\"div\",{className:\"artistImage\",style:{flex:\"0 0 16.67%\",// 6 items visible at a time\nboxSizing:\"border-box\",padding:\"0 5px\"},children:[/*#__PURE__*/_jsx(Link,{to:\"/artist/\".concat(artist._id),children:/*#__PURE__*/_jsxs(\"div\",{className:\"artistImage\",children:[artist.imageUrl&&/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(process.env.REACT_APP_API_URL,\"/\").concat(artist.imageUrl),alt:artist.title,width:\"100%\",loading:\"lazy\"}),/*#__PURE__*/_jsx(\"div\",{className:\"artContent\",children:/*#__PURE__*/_jsx(\"h4\",{className:\"artTitle\",children:artist.title})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"favoriteIcon\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleFavorite(artist),children:/*#__PURE__*/_jsx(BsHeartFill,{className:\"favorited\"})})})]},artist._id)):/*#__PURE__*/_jsx(\"p\",{className:\"px-3\",children:\"No favorites yet!\"})}),showArrows.right&&/*#__PURE__*/_jsx(\"button\",{className:\"arrow right react-multiple-carousel__arrow\",onClick:()=>scrollCarousel(1)// Scroll right\n,children:/*#__PURE__*/_jsx(BsChevronCompactRight,{})})]})});};export default Favorites;","map":{"version":3,"names":["React","useEffect","useState","useRef","Link","BsHeartFill","BsChevronCompactRight","BsChevronCompactLeft","gsap","Draggable","jsx","_jsx","jsxs","_jsxs","registerPlugin","Favorites","favorites","setFavorites","showArrows","setShowArrows","left","right","carouselRef","savedFavorites","JSON","parse","localStorage","getItem","current","updateArrowVisibility","scrollWidth","clientWidth","scrollLeft","window","addEventListener","removeEventListener","innerWidth","killTweensOf","create","type","bounds","minX","maxX","inertia","throwProps","edgeResistance","onThrowUpdate","to","x","_gsap","ease","snap","value","Math","round","toggleFavorite","artist","updatedFavorites","filter","fav","_id","setItem","stringify","scrollCarousel","direction","scrollAmount","scrollBy","behavior","setTimeout","className","children","id","onClick","ref","style","display","overflow","width","length","map","flex","boxSizing","padding","concat","imageUrl","src","process","env","REACT_APP_API_URL","alt","title","loading"],"sources":["D:/My Work/DubaiMusic/dubai-music/src/components/View/Favorites.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsHeartFill } from \"react-icons/bs\";\r\nimport { BsChevronCompactRight, BsChevronCompactLeft } from \"react-icons/bs\";\r\nimport { gsap } from \"gsap\";\r\nimport { Draggable } from \"gsap/Draggable\";\r\nimport \"./frontend.css\";\r\n\r\ngsap.registerPlugin(Draggable);\r\n\r\nconst Favorites = () => {\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [showArrows, setShowArrows] = useState({ left: false, right: false });\r\n  const carouselRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n    setFavorites(savedFavorites);\r\n  }, []); // Empty dependency array to run only on component mount\r\n\r\n  useEffect(() => {\r\n    if (carouselRef.current) {\r\n      const updateArrowVisibility = () => {\r\n        if (carouselRef.current) {\r\n          const scrollWidth = carouselRef.current.scrollWidth;\r\n          const clientWidth = carouselRef.current.clientWidth;\r\n          const scrollLeft = carouselRef.current.scrollLeft;\r\n\r\n          setShowArrows({\r\n            left: scrollLeft > 0,\r\n            right: scrollLeft < scrollWidth - clientWidth,\r\n          });\r\n        }\r\n      };\r\n\r\n      updateArrowVisibility(); // Initial check\r\n\r\n      window.addEventListener(\"resize\", updateArrowVisibility);\r\n      return () => window.removeEventListener(\"resize\", updateArrowVisibility);\r\n    }\r\n  }, [favorites]); // Dependency on favorites to recalculate arrow visibility when favorites change\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth <= 500 && carouselRef.current) {\r\n      gsap.killTweensOf(carouselRef.current);\r\n      \r\n      Draggable.create(carouselRef.current, {\r\n        type: \"x\",\r\n        bounds: {\r\n          minX: -carouselRef.current.scrollWidth + carouselRef.current.clientWidth,\r\n          maxX: 0,\r\n        },\r\n        inertia: true,\r\n        throwProps: true,\r\n        edgeResistance: 0.65,\r\n        onThrowUpdate: () => {\r\n          gsap.to(carouselRef.current, { x: carouselRef.current._gsap.x, ease: \"power2.out\" });\r\n        },\r\n        snap: {\r\n          x: (value) => Math.round(value / 16.67) * 200, // Adjust based on item width\r\n        },\r\n      });\r\n    }\r\n  }, [favorites]); // Ensure this runs when favorites change, but not continuously\r\n\r\n  const toggleFavorite = (artist) => {\r\n    const updatedFavorites = favorites.filter((fav) => fav._id !== artist._id);\r\n    setFavorites(updatedFavorites);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  const scrollCarousel = (direction) => {\r\n    if (carouselRef.current) {\r\n      const scrollAmount = 300 * direction; // Adjust the scroll amount as needed\r\n      carouselRef.current.scrollBy({ left: scrollAmount, behavior: \"smooth\" });\r\n\r\n      setTimeout(() => {\r\n        const scrollWidth = carouselRef.current.scrollWidth;\r\n        const clientWidth = carouselRef.current.clientWidth;\r\n        const scrollLeft = carouselRef.current.scrollLeft;\r\n\r\n        setShowArrows({\r\n          left: scrollLeft > 0,\r\n          right: scrollLeft < scrollWidth - clientWidth,\r\n        });\r\n      }, 500); // Delay to allow smooth scrolling to update visibility\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-custom\">\r\n      <div className=\"container-fluid p-0\" id=\"favorites\">\r\n      <h2 className=\"mb-3 fav-title\"><strong>Artists You've Favorited</strong></h2>\r\n        {showArrows.left && (\r\n          <button\r\n            className=\"arrow left react-multiple-carousel__arrow\"\r\n            onClick={() => scrollCarousel(-1)} // Scroll left\r\n          >\r\n            <BsChevronCompactLeft />\r\n          </button>\r\n        )}\r\n        <div\r\n          className=\"artistCarousel\"\r\n          ref={carouselRef}\r\n          style={{\r\n            display: \"flex\",\r\n            overflow: \"hidden\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {favorites.length > 0 ? (\r\n            favorites.map((artist) => (\r\n              <div\r\n                key={artist._id}\r\n                className=\"artistImage\"\r\n                style={{\r\n                  flex: \"0 0 16.67%\", // 6 items visible at a time\r\n                  boxSizing: \"border-box\",\r\n                  padding: \"0 5px\",\r\n                }}\r\n              >\r\n                <Link to={`/artist/${artist._id}`}>\r\n                  <div className=\"artistImage\">\r\n                    {artist.imageUrl && (\r\n                      <img\r\n                        src={`${process.env.REACT_APP_API_URL}/${artist.imageUrl}`}\r\n                        alt={artist.title}\r\n                        width=\"100%\"\r\n                        loading=\"lazy\"\r\n                      />\r\n                    )}\r\n                    <div className=\"artContent\">\r\n                      <h4 className=\"artTitle\">{artist.title}</h4>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n                <div className=\"favoriteIcon\">\r\n                  <button onClick={() => toggleFavorite(artist)}>\r\n                    <BsHeartFill className=\"favorited\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            \r\n            <p className=\"px-3\">No favorites yet!</p>\r\n          )}\r\n        </div>\r\n        {showArrows.right && (\r\n          <button\r\n            className=\"arrow right react-multiple-carousel__arrow\"\r\n            onClick={() => scrollCarousel(1)} // Scroll right\r\n          >\r\n            <BsChevronCompactRight />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}