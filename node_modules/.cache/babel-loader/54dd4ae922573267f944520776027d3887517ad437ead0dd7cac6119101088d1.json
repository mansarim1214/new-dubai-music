{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport PhotoSwipe from 'photoswipe';\nimport React, { useRef, useCallback, useEffect, useMemo, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport sortNodes from \"./helpers/sort-nodes.js\";\nimport objectToHash from \"./helpers/object-to-hash.js\";\nimport hashToObject from \"./helpers/hash-to-object.js\";\nimport getHashWithoutGidAndPid from \"./helpers/get-hash-without-gid-and-pid.js\";\nimport getHashValue from \"./helpers/get-hash-value.js\";\nimport getBaseUrl from \"./helpers/get-base-url.js\";\nimport hashIncludesNavigationQueryParams from \"./helpers/hash-includes-navigation-query-params.js\";\nimport getInitialActiveSlideIndex from \"./helpers/get-initial-active-slide-index.js\";\nimport ensureRefPassed from \"./helpers/ensure-ref-passed.js\";\nimport entryItemRefIsElement from \"./helpers/entry-item-ref-is-element.js\";\nimport { Context } from \"./context.js\";\nimport PhotoSwipeLightboxStub from \"./lightbox-stub.js\";\nimport { NoRefError } from \"./no-ref-error.js\";\n/**\n * This variable stores the PhotoSwipe instance object\n * It aims to check whether does the PhotoSwipe opened at the moment\n * (analog of window.pswp in 'photoswipe/lightbox')\n */\nlet pswp = null;\n/**\n * Gallery component providing photoswipe context\n */\nexport const Gallery = ({\n  children,\n  options,\n  plugins,\n  uiElements,\n  id: galleryUID,\n  onBeforeOpen,\n  onOpen,\n  withCaption,\n  withDownloadButton\n}) => {\n  const [contentPortal, setContentPortal] = useState(null);\n  const items = useRef(new Map());\n  /**\n   * Store PID from hash if there are no items yet,\n   * but we need to open photoswipe if items appear in the next render\n   */\n  const openWhenReadyPid = useRef(null);\n  const open = useCallback((targetRef, targetId, itemIndex, e) => {\n    // only one photoswipe instance could be opened at once\n    // so if photoswipe is already open, function should do nothing\n    if (pswp) {\n      return;\n    }\n    const entries = Array.from(items.current);\n    if (typeof itemIndex === 'number' && (entries[itemIndex] === undefined || !entryItemRefIsElement(entries[itemIndex]))) {\n      throw new NoRefError(`Failed to open at index ${itemIndex}`);\n    }\n    const {\n      slides,\n      index\n    } = entries.map(ensureRefPassed).sort(([{\n      current: a\n    }], [{\n      current: b\n    }]) => sortNodes(a, b)).reduce((acc, entry, i) => {\n      const [ref, _a] = entry,\n        {\n          width,\n          height,\n          original,\n          originalSrcset,\n          thumbnail,\n          cropped,\n          content,\n          id: pid\n        } = _a,\n        rest = __rest(_a, [\"width\", \"height\", \"original\", \"originalSrcset\", \"thumbnail\", \"cropped\", \"content\", \"id\"]);\n      if (targetRef === ref || pid !== undefined && String(pid) === targetId) {\n        acc.index = i;\n      }\n      acc.slides.push(Object.assign(Object.assign(Object.assign({\n        w: Number(width),\n        h: Number(height),\n        src: original,\n        srcset: originalSrcset,\n        msrc: thumbnail,\n        element: ref.current,\n        thumbCropped: cropped,\n        content\n      }, content !== undefined ? {\n        type: 'html'\n      } : {}), pid !== undefined ? {\n        pid\n      } : {}), rest));\n      return acc;\n    }, {\n      slides: [],\n      index: itemIndex || null\n    });\n    const initialPoint = e && e.clientX !== undefined && e.clientY !== undefined ? {\n      x: e.clientX,\n      y: e.clientY\n    } : null;\n    const instance = new PhotoSwipe(Object.assign({\n      dataSource: slides,\n      index: getInitialActiveSlideIndex(index, targetId),\n      initialPointerPos: initialPoint\n    }, options || {}));\n    pswp = instance;\n    instance.on('contentActivate', ({\n      content: slideContent\n    }) => {\n      if (slideContent.data.content) {\n        setContentPortal(createPortal(slideContent.data.content, slideContent.element));\n      } else {\n        setContentPortal(null);\n      }\n    });\n    instance.on('close', () => {\n      setContentPortal(null);\n    });\n    if (withDownloadButton) {\n      instance.on('uiRegister', () => {\n        var _a;\n        (_a = instance.ui) === null || _a === void 0 ? void 0 : _a.registerElement({\n          name: 'download-button',\n          ariaLabel: 'Download',\n          order: 8,\n          isButton: true,\n          tagName: 'a',\n          appendTo: 'bar',\n          html: {\n            isCustomSVG: true,\n            inner: '<path d=\"M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1ZM23 23H9v2h14Z\" id=\"pswp__icn-download\"/>',\n            outlineID: 'pswp__icn-download'\n          },\n          // can't test onInit callback correctly\n          onInit: /* istanbul ignore next */(el, pswpInstance) => {\n            el.setAttribute('download', '');\n            el.setAttribute('target', '_blank');\n            el.setAttribute('rel', 'noopener');\n            instance.on('change', () => {\n              var _a;\n              if (!((_a = pswpInstance.currSlide) === null || _a === void 0 ? void 0 : _a.data.src)) {\n                return;\n              }\n              const downloadButton = el;\n              downloadButton.href = pswpInstance.currSlide.data.src;\n            });\n          }\n        });\n      });\n    }\n    if (withCaption) {\n      instance.on('uiRegister', () => {\n        var _a;\n        (_a = instance.ui) === null || _a === void 0 ? void 0 : _a.registerElement({\n          name: 'default-caption',\n          order: 9,\n          isButton: false,\n          appendTo: 'root',\n          // can't test onInit callback correctly\n          onInit: /* istanbul ignore next */(el, pswpInstance) => {\n            /* eslint-disable no-param-reassign */\n            el.style.position = 'absolute';\n            el.style.bottom = '15px';\n            el.style.left = '0';\n            el.style.right = '0';\n            el.style.padding = '0 20px';\n            el.style.color = 'var(--pswp-icon-color)';\n            el.style.textAlign = 'center';\n            el.style.fontSize = '14px';\n            el.style.lineHeight = '1.5';\n            el.style.textShadow = '1px 1px 3px var(--pswp-icon-color-secondary)';\n            /* eslint-enable no-param-reassign */\n            instance.on('change', () => {\n              if (!pswpInstance.currSlide) {\n                return;\n              }\n              const {\n                caption,\n                alt\n              } = pswpInstance.currSlide.data;\n              // eslint-disable-next-line no-param-reassign\n              el.innerHTML = caption || alt || '';\n            });\n          }\n        });\n      });\n    }\n    if (Array.isArray(uiElements)) {\n      uiElements.forEach(uiElement => {\n        instance.on('uiRegister', () => {\n          var _a;\n          (_a = instance.ui) === null || _a === void 0 ? void 0 : _a.registerElement(uiElement);\n        });\n      });\n    }\n    if (typeof plugins === 'function') {\n      plugins(new PhotoSwipeLightboxStub(instance));\n    }\n    if (typeof onBeforeOpen === 'function') {\n      onBeforeOpen(instance);\n    }\n    const getHistoryState = () => {\n      return {\n        gallery: {\n          galleryUID\n        }\n      };\n    };\n    instance.on('beforeOpen', () => {\n      var _a;\n      if (galleryUID === undefined) {\n        return;\n      }\n      const hashIncludesGidAndPid = hashIncludesNavigationQueryParams(getHashValue());\n      // was openned by react-photoswipe-gallery's open() method call (click on thumbnail, for example)\n      // we need to create new history record to store hash navigation state\n      if (!hashIncludesGidAndPid) {\n        window.history.pushState(getHistoryState(), document.title);\n        return;\n      }\n      const hasGalleryStateInHistory = Boolean((_a = window.history.state) === null || _a === void 0 ? void 0 : _a.gallery);\n      // was openned by history.forward()\n      // we do not need to create new history record for hash navigation\n      // because we already have one\n      if (hasGalleryStateInHistory) {\n        return;\n      }\n      // was openned by link with gid and pid\n      const baseUrl = getBaseUrl();\n      const currentHash = getHashValue();\n      const hashWithoutGidAndPid = getHashWithoutGidAndPid(currentHash);\n      const urlWithoutOpenedSlide = `${baseUrl}${hashWithoutGidAndPid ? `#${hashWithoutGidAndPid}` : ''}`;\n      const urlWithOpenedSlide = `${baseUrl}#${currentHash}`;\n      // firstly, we need to modify current history record - set url without gid and pid\n      // we will return to this state after photoswipe closing\n      window.history.replaceState(window.history.state, document.title, urlWithoutOpenedSlide);\n      // then we need to create new history record to store hash navigation state\n      window.history.pushState(getHistoryState(), document.title, urlWithOpenedSlide);\n    });\n    instance.on('change', () => {\n      var _a;\n      if (galleryUID === undefined) {\n        return;\n      }\n      const pid = ((_a = instance.currSlide) === null || _a === void 0 ? void 0 : _a.data.pid) || instance.currIndex + 1;\n      const baseUrl = getBaseUrl();\n      const baseHash = getHashWithoutGidAndPid(getHashValue());\n      const gidAndPidHash = objectToHash({\n        gid: galleryUID,\n        pid\n      });\n      const urlWithOpenedSlide = `${baseUrl}#${baseHash}&${gidAndPidHash}`;\n      // updates in current history record hash value with actual pid\n      window.history.replaceState(getHistoryState(), document.title, urlWithOpenedSlide);\n    });\n    const closeGalleryOnHistoryPopState = () => {\n      if (galleryUID === undefined) {\n        return;\n      }\n      if (pswp !== null) {\n        pswp.close();\n      }\n    };\n    window.addEventListener('popstate', closeGalleryOnHistoryPopState);\n    instance.on('destroy', () => {\n      if (galleryUID !== undefined) {\n        window.removeEventListener('popstate', closeGalleryOnHistoryPopState);\n        // if hash includes gid and pid => this destroy was called with ordinary instance.close() call\n        // if not => destroy was called by history.back (browser's back button) => history has been already returned to previous state\n        if (hashIncludesNavigationQueryParams(getHashValue())) {\n          window.history.back();\n        }\n      }\n      pswp = null;\n    });\n    instance.init();\n    if (typeof onOpen === 'function') {\n      onOpen(instance);\n    }\n  }, [options, plugins, uiElements, galleryUID, onBeforeOpen, onOpen, withCaption, withDownloadButton]);\n  useEffect(() => {\n    return () => {\n      if (pswp) {\n        pswp.close();\n      }\n    };\n  }, []);\n  const openGalleryBasedOnUrlHash = useCallback(() => {\n    if (galleryUID === undefined) {\n      return;\n    }\n    if (pswp !== null) {\n      return;\n    }\n    const hash = getHashValue();\n    if (hash.length < 5) {\n      return;\n    }\n    const params = hashToObject(hash);\n    const {\n      pid,\n      gid\n    } = params;\n    if (!pid || !gid) {\n      return;\n    }\n    if (items.current.size === 0) {\n      // no items currently, save PID from hash for future use\n      openWhenReadyPid.current = pid;\n      return;\n    }\n    if (pid && gid === String(galleryUID)) {\n      open(null, pid);\n    }\n  }, [open, galleryUID]);\n  useEffect(() => {\n    openGalleryBasedOnUrlHash();\n    // needed for case when gallery was firstly opened, then was closed and user clicked on browser's forward button\n    window.addEventListener('popstate', openGalleryBasedOnUrlHash);\n    return () => {\n      window.removeEventListener('popstate', openGalleryBasedOnUrlHash);\n    };\n  }, [openGalleryBasedOnUrlHash]);\n  const remove = useCallback(ref => {\n    items.current.delete(ref);\n  }, []);\n  const set = useCallback((ref, data) => {\n    items.current.set(ref, data);\n    if (openWhenReadyPid.current === null) {\n      return;\n    }\n    const {\n      id\n    } = data;\n    if (id === openWhenReadyPid.current) {\n      // user provided `id` prop of Item component\n      open(ref);\n      openWhenReadyPid.current = null;\n      return;\n    }\n    if (!id) {\n      // in this case we using index of item as PID\n      const index = parseInt(openWhenReadyPid.current, 10) - 1;\n      const refToOpen = Array.from(items.current.keys())[index];\n      if (refToOpen) {\n        open(refToOpen);\n        openWhenReadyPid.current = null;\n      }\n    }\n  }, [open]);\n  const isRefRegistered = useCallback(ref => {\n    return items.current.has(ref);\n  }, []);\n  const openAt = useCallback(index => {\n    open(null, null, index);\n  }, [open]);\n  const contextValue = useMemo(() => ({\n    remove,\n    set,\n    handleClick: open,\n    open: openAt,\n    isRefRegistered\n  }), [remove, set, open, openAt, isRefRegistered]);\n  return React.createElement(Context.Provider, {\n    value: contextValue\n  }, children, contentPortal);\n};\nGallery.propTypes = {\n  children: PropTypes.any,\n  options: PropTypes.object,\n  plugins: PropTypes.func,\n  uiElements: PropTypes.array,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onBeforeOpen: PropTypes.func,\n  onOpen: PropTypes.func,\n  withCaption: PropTypes.bool,\n  withDownloadButton: PropTypes.bool\n};","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","PhotoSwipe","React","useRef","useCallback","useEffect","useMemo","useState","createPortal","PropTypes","sortNodes","objectToHash","hashToObject","getHashWithoutGidAndPid","getHashValue","getBaseUrl","hashIncludesNavigationQueryParams","getInitialActiveSlideIndex","ensureRefPassed","entryItemRefIsElement","Context","PhotoSwipeLightboxStub","NoRefError","pswp","Gallery","children","options","plugins","uiElements","id","galleryUID","onBeforeOpen","onOpen","withCaption","withDownloadButton","contentPortal","setContentPortal","items","Map","openWhenReadyPid","open","targetRef","targetId","itemIndex","entries","Array","from","current","undefined","slides","index","map","sort","a","b","reduce","acc","entry","ref","_a","width","height","original","originalSrcset","thumbnail","cropped","content","pid","rest","String","push","assign","w","Number","h","src","srcset","msrc","element","thumbCropped","type","initialPoint","clientX","clientY","x","y","instance","dataSource","initialPointerPos","on","slideContent","data","ui","registerElement","name","ariaLabel","order","isButton","tagName","appendTo","html","isCustomSVG","inner","outlineID","onInit","el","pswpInstance","setAttribute","currSlide","downloadButton","href","style","position","bottom","left","right","padding","color","textAlign","fontSize","lineHeight","textShadow","caption","alt","innerHTML","isArray","forEach","uiElement","getHistoryState","gallery","hashIncludesGidAndPid","window","history","pushState","document","title","hasGalleryStateInHistory","Boolean","state","baseUrl","currentHash","hashWithoutGidAndPid","urlWithoutOpenedSlide","urlWithOpenedSlide","replaceState","currIndex","baseHash","gidAndPidHash","gid","closeGalleryOnHistoryPopState","close","addEventListener","removeEventListener","back","init","openGalleryBasedOnUrlHash","hash","params","size","remove","delete","set","parseInt","refToOpen","keys","isRefRegistered","has","openAt","contextValue","handleClick","createElement","Provider","value","propTypes","any","object","func","array","oneOfType","string","number","bool"],"sources":["D:/DubaiMusic/dubai-music/node_modules/react-photoswipe-gallery/dist/gallery.js"],"sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport PhotoSwipe from 'photoswipe';\nimport React, { useRef, useCallback, useEffect, useMemo, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport sortNodes from \"./helpers/sort-nodes.js\";\nimport objectToHash from \"./helpers/object-to-hash.js\";\nimport hashToObject from \"./helpers/hash-to-object.js\";\nimport getHashWithoutGidAndPid from \"./helpers/get-hash-without-gid-and-pid.js\";\nimport getHashValue from \"./helpers/get-hash-value.js\";\nimport getBaseUrl from \"./helpers/get-base-url.js\";\nimport hashIncludesNavigationQueryParams from \"./helpers/hash-includes-navigation-query-params.js\";\nimport getInitialActiveSlideIndex from \"./helpers/get-initial-active-slide-index.js\";\nimport ensureRefPassed from \"./helpers/ensure-ref-passed.js\";\nimport entryItemRefIsElement from \"./helpers/entry-item-ref-is-element.js\";\nimport { Context } from \"./context.js\";\nimport PhotoSwipeLightboxStub from \"./lightbox-stub.js\";\nimport { NoRefError } from \"./no-ref-error.js\";\n/**\n * This variable stores the PhotoSwipe instance object\n * It aims to check whether does the PhotoSwipe opened at the moment\n * (analog of window.pswp in 'photoswipe/lightbox')\n */\nlet pswp = null;\n/**\n * Gallery component providing photoswipe context\n */\nexport const Gallery = ({\n  children,\n  options,\n  plugins,\n  uiElements,\n  id: galleryUID,\n  onBeforeOpen,\n  onOpen,\n  withCaption,\n  withDownloadButton\n}) => {\n  const [contentPortal, setContentPortal] = useState(null);\n  const items = useRef(new Map());\n  /**\n   * Store PID from hash if there are no items yet,\n   * but we need to open photoswipe if items appear in the next render\n   */\n  const openWhenReadyPid = useRef(null);\n  const open = useCallback((targetRef, targetId, itemIndex, e) => {\n    // only one photoswipe instance could be opened at once\n    // so if photoswipe is already open, function should do nothing\n    if (pswp) {\n      return;\n    }\n    const entries = Array.from(items.current);\n    if (typeof itemIndex === 'number' && (entries[itemIndex] === undefined || !entryItemRefIsElement(entries[itemIndex]))) {\n      throw new NoRefError(`Failed to open at index ${itemIndex}`);\n    }\n    const {\n      slides,\n      index\n    } = entries.map(ensureRefPassed).sort(([{\n      current: a\n    }], [{\n      current: b\n    }]) => sortNodes(a, b)).reduce((acc, entry, i) => {\n      const [ref, _a] = entry,\n        {\n          width,\n          height,\n          original,\n          originalSrcset,\n          thumbnail,\n          cropped,\n          content,\n          id: pid\n        } = _a,\n        rest = __rest(_a, [\"width\", \"height\", \"original\", \"originalSrcset\", \"thumbnail\", \"cropped\", \"content\", \"id\"]);\n      if (targetRef === ref || pid !== undefined && String(pid) === targetId) {\n        acc.index = i;\n      }\n      acc.slides.push(Object.assign(Object.assign(Object.assign({\n        w: Number(width),\n        h: Number(height),\n        src: original,\n        srcset: originalSrcset,\n        msrc: thumbnail,\n        element: ref.current,\n        thumbCropped: cropped,\n        content\n      }, content !== undefined ? {\n        type: 'html'\n      } : {}), pid !== undefined ? {\n        pid\n      } : {}), rest));\n      return acc;\n    }, {\n      slides: [],\n      index: itemIndex || null\n    });\n    const initialPoint = e && e.clientX !== undefined && e.clientY !== undefined ? {\n      x: e.clientX,\n      y: e.clientY\n    } : null;\n    const instance = new PhotoSwipe(Object.assign({\n      dataSource: slides,\n      index: getInitialActiveSlideIndex(index, targetId),\n      initialPointerPos: initialPoint\n    }, options || {}));\n    pswp = instance;\n    instance.on('contentActivate', ({\n      content: slideContent\n    }) => {\n      if (slideContent.data.content) {\n        setContentPortal(createPortal(slideContent.data.content, slideContent.element));\n      } else {\n        setContentPortal(null);\n      }\n    });\n    instance.on('close', () => {\n      setContentPortal(null);\n    });\n    if (withDownloadButton) {\n      instance.on('uiRegister', () => {\n        var _a;\n        (_a = instance.ui) === null || _a === void 0 ? void 0 : _a.registerElement({\n          name: 'download-button',\n          ariaLabel: 'Download',\n          order: 8,\n          isButton: true,\n          tagName: 'a',\n          appendTo: 'bar',\n          html: {\n            isCustomSVG: true,\n            inner: '<path d=\"M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1ZM23 23H9v2h14Z\" id=\"pswp__icn-download\"/>',\n            outlineID: 'pswp__icn-download'\n          },\n          // can't test onInit callback correctly\n          onInit: /* istanbul ignore next */(el, pswpInstance) => {\n            el.setAttribute('download', '');\n            el.setAttribute('target', '_blank');\n            el.setAttribute('rel', 'noopener');\n            instance.on('change', () => {\n              var _a;\n              if (!((_a = pswpInstance.currSlide) === null || _a === void 0 ? void 0 : _a.data.src)) {\n                return;\n              }\n              const downloadButton = el;\n              downloadButton.href = pswpInstance.currSlide.data.src;\n            });\n          }\n        });\n      });\n    }\n    if (withCaption) {\n      instance.on('uiRegister', () => {\n        var _a;\n        (_a = instance.ui) === null || _a === void 0 ? void 0 : _a.registerElement({\n          name: 'default-caption',\n          order: 9,\n          isButton: false,\n          appendTo: 'root',\n          // can't test onInit callback correctly\n          onInit: /* istanbul ignore next */(el, pswpInstance) => {\n            /* eslint-disable no-param-reassign */\n            el.style.position = 'absolute';\n            el.style.bottom = '15px';\n            el.style.left = '0';\n            el.style.right = '0';\n            el.style.padding = '0 20px';\n            el.style.color = 'var(--pswp-icon-color)';\n            el.style.textAlign = 'center';\n            el.style.fontSize = '14px';\n            el.style.lineHeight = '1.5';\n            el.style.textShadow = '1px 1px 3px var(--pswp-icon-color-secondary)';\n            /* eslint-enable no-param-reassign */\n            instance.on('change', () => {\n              if (!pswpInstance.currSlide) {\n                return;\n              }\n              const {\n                caption,\n                alt\n              } = pswpInstance.currSlide.data;\n              // eslint-disable-next-line no-param-reassign\n              el.innerHTML = caption || alt || '';\n            });\n          }\n        });\n      });\n    }\n    if (Array.isArray(uiElements)) {\n      uiElements.forEach(uiElement => {\n        instance.on('uiRegister', () => {\n          var _a;\n          (_a = instance.ui) === null || _a === void 0 ? void 0 : _a.registerElement(uiElement);\n        });\n      });\n    }\n    if (typeof plugins === 'function') {\n      plugins(new PhotoSwipeLightboxStub(instance));\n    }\n    if (typeof onBeforeOpen === 'function') {\n      onBeforeOpen(instance);\n    }\n    const getHistoryState = () => {\n      return {\n        gallery: {\n          galleryUID\n        }\n      };\n    };\n    instance.on('beforeOpen', () => {\n      var _a;\n      if (galleryUID === undefined) {\n        return;\n      }\n      const hashIncludesGidAndPid = hashIncludesNavigationQueryParams(getHashValue());\n      // was openned by react-photoswipe-gallery's open() method call (click on thumbnail, for example)\n      // we need to create new history record to store hash navigation state\n      if (!hashIncludesGidAndPid) {\n        window.history.pushState(getHistoryState(), document.title);\n        return;\n      }\n      const hasGalleryStateInHistory = Boolean((_a = window.history.state) === null || _a === void 0 ? void 0 : _a.gallery);\n      // was openned by history.forward()\n      // we do not need to create new history record for hash navigation\n      // because we already have one\n      if (hasGalleryStateInHistory) {\n        return;\n      }\n      // was openned by link with gid and pid\n      const baseUrl = getBaseUrl();\n      const currentHash = getHashValue();\n      const hashWithoutGidAndPid = getHashWithoutGidAndPid(currentHash);\n      const urlWithoutOpenedSlide = `${baseUrl}${hashWithoutGidAndPid ? `#${hashWithoutGidAndPid}` : ''}`;\n      const urlWithOpenedSlide = `${baseUrl}#${currentHash}`;\n      // firstly, we need to modify current history record - set url without gid and pid\n      // we will return to this state after photoswipe closing\n      window.history.replaceState(window.history.state, document.title, urlWithoutOpenedSlide);\n      // then we need to create new history record to store hash navigation state\n      window.history.pushState(getHistoryState(), document.title, urlWithOpenedSlide);\n    });\n    instance.on('change', () => {\n      var _a;\n      if (galleryUID === undefined) {\n        return;\n      }\n      const pid = ((_a = instance.currSlide) === null || _a === void 0 ? void 0 : _a.data.pid) || instance.currIndex + 1;\n      const baseUrl = getBaseUrl();\n      const baseHash = getHashWithoutGidAndPid(getHashValue());\n      const gidAndPidHash = objectToHash({\n        gid: galleryUID,\n        pid\n      });\n      const urlWithOpenedSlide = `${baseUrl}#${baseHash}&${gidAndPidHash}`;\n      // updates in current history record hash value with actual pid\n      window.history.replaceState(getHistoryState(), document.title, urlWithOpenedSlide);\n    });\n    const closeGalleryOnHistoryPopState = () => {\n      if (galleryUID === undefined) {\n        return;\n      }\n      if (pswp !== null) {\n        pswp.close();\n      }\n    };\n    window.addEventListener('popstate', closeGalleryOnHistoryPopState);\n    instance.on('destroy', () => {\n      if (galleryUID !== undefined) {\n        window.removeEventListener('popstate', closeGalleryOnHistoryPopState);\n        // if hash includes gid and pid => this destroy was called with ordinary instance.close() call\n        // if not => destroy was called by history.back (browser's back button) => history has been already returned to previous state\n        if (hashIncludesNavigationQueryParams(getHashValue())) {\n          window.history.back();\n        }\n      }\n      pswp = null;\n    });\n    instance.init();\n    if (typeof onOpen === 'function') {\n      onOpen(instance);\n    }\n  }, [options, plugins, uiElements, galleryUID, onBeforeOpen, onOpen, withCaption, withDownloadButton]);\n  useEffect(() => {\n    return () => {\n      if (pswp) {\n        pswp.close();\n      }\n    };\n  }, []);\n  const openGalleryBasedOnUrlHash = useCallback(() => {\n    if (galleryUID === undefined) {\n      return;\n    }\n    if (pswp !== null) {\n      return;\n    }\n    const hash = getHashValue();\n    if (hash.length < 5) {\n      return;\n    }\n    const params = hashToObject(hash);\n    const {\n      pid,\n      gid\n    } = params;\n    if (!pid || !gid) {\n      return;\n    }\n    if (items.current.size === 0) {\n      // no items currently, save PID from hash for future use\n      openWhenReadyPid.current = pid;\n      return;\n    }\n    if (pid && gid === String(galleryUID)) {\n      open(null, pid);\n    }\n  }, [open, galleryUID]);\n  useEffect(() => {\n    openGalleryBasedOnUrlHash();\n    // needed for case when gallery was firstly opened, then was closed and user clicked on browser's forward button\n    window.addEventListener('popstate', openGalleryBasedOnUrlHash);\n    return () => {\n      window.removeEventListener('popstate', openGalleryBasedOnUrlHash);\n    };\n  }, [openGalleryBasedOnUrlHash]);\n  const remove = useCallback(ref => {\n    items.current.delete(ref);\n  }, []);\n  const set = useCallback((ref, data) => {\n    items.current.set(ref, data);\n    if (openWhenReadyPid.current === null) {\n      return;\n    }\n    const {\n      id\n    } = data;\n    if (id === openWhenReadyPid.current) {\n      // user provided `id` prop of Item component\n      open(ref);\n      openWhenReadyPid.current = null;\n      return;\n    }\n    if (!id) {\n      // in this case we using index of item as PID\n      const index = parseInt(openWhenReadyPid.current, 10) - 1;\n      const refToOpen = Array.from(items.current.keys())[index];\n      if (refToOpen) {\n        open(refToOpen);\n        openWhenReadyPid.current = null;\n      }\n    }\n  }, [open]);\n  const isRefRegistered = useCallback(ref => {\n    return items.current.has(ref);\n  }, []);\n  const openAt = useCallback(index => {\n    open(null, null, index);\n  }, [open]);\n  const contextValue = useMemo(() => ({\n    remove,\n    set,\n    handleClick: open,\n    open: openAt,\n    isRefRegistered\n  }), [remove, set, open, openAt, isRefRegistered]);\n  return React.createElement(Context.Provider, {\n    value: contextValue\n  }, children, contentPortal);\n};\nGallery.propTypes = {\n  children: PropTypes.any,\n  options: PropTypes.object,\n  plugins: PropTypes.func,\n  uiElements: PropTypes.array,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onBeforeOpen: PropTypes.func,\n  onOpen: PropTypes.func,\n  withCaption: PropTypes.bool,\n  withDownloadButton: PropTypes.bool\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}