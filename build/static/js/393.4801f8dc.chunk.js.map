{"version":3,"file":"static/js/393.4801f8dc.chunk.js","mappings":"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","sources":["components/View/WelcomeModal.js","components/View/Musicians.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./frontend.css\"; // Ensure to import your CSS for styling\r\n\r\nconst WelcomeModal = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  // Function to create a cookie\r\n  const createCookie = (name, value, days) => {\r\n    let expires = \"\";\r\n    if (days) {\r\n      const date = new Date();\r\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n      expires = \"; expires=\" + date.toGMTString();\r\n    }\r\n    document.cookie = name + \"=\" + value + expires + \"; path=/\";\r\n  };\r\n\r\n  // Function to get a cookie value\r\n  const getCookie = (name) => {\r\n    const value = `; ${document.cookie}`;\r\n    const parts = value.split(`; ${name}=`);\r\n    if (parts.length === 2) return parts.pop().split(\";\").shift();\r\n    return \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if the cookie exists and show the modal after 3 seconds\r\n    if (getCookie(\"loadPopup\") === \"\") {\r\n      const timer = setTimeout(() => {\r\n        setIsModalVisible(true);\r\n        createCookie(\"loadPopup\", true, 1); \r\n      }, 4000);\r\n\r\n      // Cleanup timer on unmount\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, []);\r\n\r\n  // Function to close the modal\r\n  const handleClose = () => {\r\n    setIsModalVisible(false);\r\n\r\n    \r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isModalVisible && (\r\n        <div\r\n          className=\"modal fade show\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"myLargeModalLabel\"\r\n          id=\"WelcomeModal\"\r\n          style={{ display: \"block\" }}\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content welcomemodal text-center\">\r\n              <div className=\"modal-header p-0 \">\r\n                \r\n            \r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  onClick={handleClose}\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body py-0\">\r\n\r\n              <div className=\"tex-center\">\r\n                <img\r\n                  src=\"/dubai-music-white-logo.webp\"\r\n                  className=\"d-inline-block align-top\"\r\n                  alt=\"Logo\"\r\n                  width=\"200px\"\r\n                />\r\n                </div>\r\n                \r\n                <h4 className=\"text-center py-4\">Connecting you to the best live music,<br/> seven days a week</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WelcomeModal;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsHeartFill } from \"react-icons/bs\";\r\nimport { BsChevronCompactRight, BsChevronCompactLeft } from \"react-icons/bs\";\r\nimport { gsap } from \"gsap\";\r\nimport { Draggable } from \"gsap/Draggable\";\r\nimport axios from \"axios\";\r\nimport WelcomeModal from \"./WelcomeModal\";\r\nimport Preloader from './Preloader';\r\nimport \"./frontend.css\";\r\n\r\ngsap.registerPlugin(Draggable);\r\n\r\nconst Musicians = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [artistsByCategory, setArtistsByCategory] = useState({});\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [showArrows, setShowArrows] = useState({ left: false, right: false });\r\n  const carouselRefs = useRef([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const manualArtistOrder = {\r\n        Singers: [\r\n          \"Jerome Deligero\",\r\n          \"Emily Peacock\",\r\n          \"Toi Dupras\",\r\n          \"Yvonne Park\",\r\n          \"Matt Palmer\",\r\n          \"Lina Ammor- Jevtic\",\r\n          \"Eirini Devitt\",\r\n          \"Juan Pablo Pellicer\",\r\n          \"Nick Pritchard\",\r\n          \"Mostafa Sattar\",\r\n          \"Jin Flora\",\r\n          \"Robbi McFaulds\",\r\n        ],\r\n        DJ: [\"Dadou\", \"Elena\", \"Yana Kulyk\", \"Raphy J\", \"DJ Stylez\", \"DJ Melyna\"],\r\n        Musicians: [\r\n          \"Ksenia Kot\",\r\n          \"Jose Ramon Nunez\",\r\n          \"Soren Lyng Hansen\",\r\n          \"Tatiana Durova\",\r\n          \"Aleksandra Dudek\",\r\n          \"Ulyana Goncharova\",\r\n        ],\r\n        Trending: [\r\n          \"Carrie Gibson’s NuvoSoul\",\r\n          \"Jaymie Deville\",\r\n          \"Chelsey Chantelle\",\r\n          \"Golden Collective\",\r\n          \"Abdallah Seleem\",\r\n          \"Dany Echemendia\",\r\n          \"Marvin Lee\",\r\n        ],\r\n      };\r\n\r\n      try {\r\n        setLoading(true);\r\n        const categoriesResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/categories`\r\n        );\r\n        const fetchedCategories = categoriesResponse.data;\r\n\r\n        const artistsResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/artists`\r\n        );\r\n        let fetchedArtists = artistsResponse.data;\r\n\r\n        // Filter only published artists\r\n        fetchedArtists = fetchedArtists.filter(artist => artist.isPublished === 'published');\r\n\r\n        // Define the desired order\r\n        const desiredOrder = [\r\n          \"Trending\",\r\n          \"Singers\",\r\n          \"Solo Looping Artists\",\r\n          \"Band\",\r\n          \"DJ\",\r\n          \"Musicians\",\r\n        ];\r\n\r\n        // Sort categories based on desiredOrder\r\n        const sortedCategories = fetchedCategories.sort((a, b) => {\r\n          const aIndex = desiredOrder.indexOf(a.name);\r\n          const bIndex = desiredOrder.indexOf(b.name);\r\n          if (aIndex === -1 && bIndex === -1) return 0;\r\n          if (aIndex === -1) return 1;\r\n          if (bIndex === -1) return -1;\r\n          return aIndex - bIndex;\r\n        });\r\n\r\n        // Load favorites from localStorage\r\n        const storedFavorites =\r\n          JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n\r\n        // Ensure favorites are marked correctly\r\n        const groupedArtists = {};\r\n\r\n        sortedCategories.forEach((category) => {\r\n          let sortedArtists = fetchedArtists\r\n            .filter((artist) => artist.category === category.name)\r\n            .map((artist) => ({\r\n              ...artist,\r\n              isFavorite: storedFavorites.some((fav) => fav._id === artist._id),\r\n            }));\r\n\r\n          const order = manualArtistOrder[category.name];\r\n          if (order) {\r\n            // Sort based on manualArtistOrder\r\n            const sortedByManualOrder = sortedArtists\r\n              .filter((artist) => order.includes(artist.title))\r\n              .sort((a, b) => order.indexOf(a.title) - order.indexOf(b.title));\r\n\r\n            // Add artists not in the manualArtistOrder at the end\r\n            const remainingArtists = sortedArtists.filter(\r\n              (artist) => !order.includes(artist.title)\r\n            );\r\n\r\n            sortedArtists = [...sortedByManualOrder, ...remainingArtists];\r\n          }\r\n\r\n          groupedArtists[category.name] = sortedArtists;\r\n        });\r\n\r\n        // Update state with sorted categories and artists\r\n        setCategories(sortedCategories);\r\n        setArtistsByCategory(groupedArtists);\r\n        setFavorites(storedFavorites);\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  \r\n\r\n  useEffect(() => {\r\n    if (carouselRefs.current.length > 0) {\r\n      const updateArrowVisibility = () => {\r\n        carouselRefs.current.forEach((carousel, index) => {\r\n          if (carousel) {\r\n            const scrollWidth = carousel.scrollWidth;\r\n            const clientWidth = carousel.clientWidth;\r\n            const scrollLeft = carousel.scrollLeft;\r\n\r\n            setShowArrows((prev) => ({\r\n              ...prev,\r\n              [index]: {\r\n                left: scrollLeft > 0,\r\n                right: scrollLeft < scrollWidth - clientWidth,\r\n              },\r\n            }));\r\n          }\r\n        });\r\n      };\r\n\r\n      updateArrowVisibility(); // Initial check\r\n\r\n      window.addEventListener(\"resize\", updateArrowVisibility);\r\n      return () => window.removeEventListener(\"resize\", updateArrowVisibility);\r\n    }\r\n  }, [artistsByCategory, favorites]);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth <= 500 && carouselRefs.current.length > 0) {\r\n      carouselRefs.current.forEach((carousel) => {\r\n        if (carousel) {\r\n          gsap.killTweensOf(carousel);\r\n\r\n          Draggable.create(carousel, {\r\n            type: \"x\",\r\n            bounds: {\r\n              minX: -carousel.scrollWidth + carousel.clientWidth,\r\n              maxX: 0,\r\n            },\r\n            inertia: true,\r\n            throwProps: true,\r\n            edgeResistance: 0.65,\r\n            onThrowUpdate: () => {\r\n              gsap.to(carousel, { x: carousel._gsap.x, ease: \"power2.out\" });\r\n            },\r\n            snap: {\r\n              x: (value) => Math.round(value / 16.67) * 200, // Adjust based on item width\r\n            },\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [artistsByCategory, favorites]);\r\n\r\n  const toggleFavorite = (artist) => {\r\n    // Get the current favorites from localStorage\r\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n\r\n    // Check if the artist is already in favorites\r\n    const isAlreadyFavorite = savedFavorites.some(\r\n      (fav) => fav._id === artist._id\r\n    );\r\n\r\n    // Update favorites based on whether the artist is already a favorite\r\n    const updatedFavorites = isAlreadyFavorite\r\n      ? savedFavorites.filter((fav) => fav._id !== artist._id)\r\n      : [...savedFavorites, artist];\r\n\r\n    // Update state and localStorage\r\n    setFavorites(updatedFavorites);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  const isFavorite = (artist) => {\r\n    return favorites.some((fav) => fav._id === artist._id);\r\n  };\r\n\r\n  const scrollCarousel = (direction, index) => {\r\n    const carousel = carouselRefs.current[index];\r\n    if (carousel) {\r\n      // Assuming each slide is 16.67% of the carousel width\r\n      const slideWidth = carousel.clientWidth / 6; // Adjust the denominator based on the number of visible slides\r\n      const scrollAmount = slideWidth * 3 * direction; // Scroll by 3 slides\r\n\r\n      carousel.scrollBy({\r\n        left: scrollAmount,\r\n        behavior: \"smooth\",\r\n      });\r\n\r\n      setTimeout(() => {\r\n        const scrollWidth = carousel.scrollWidth;\r\n        const clientWidth = carousel.clientWidth;\r\n        const scrollLeft = carousel.scrollLeft;\r\n\r\n        setShowArrows((prev) => ({\r\n          ...prev,\r\n          [index]: {\r\n            left: scrollLeft > 0,\r\n            right: scrollLeft < scrollWidth - clientWidth,\r\n          },\r\n        }));\r\n      }, 500); // Delay to allow smooth scrolling to update visibility\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <Preloader />; // Show Preloader while loading data\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"mainFront\">\r\n      <WelcomeModal />\r\n\r\n      <div className=\"container-fluid p-0\" id=\"explore\">\r\n        {categories\r\n          .filter(\r\n            (category) =>\r\n              artistsByCategory[category.name] &&\r\n              artistsByCategory[category.name].length > 0\r\n          )\r\n          .map((category, index) => (\r\n            <section key={category._id} className=\"artSection\">\r\n              <div className=\"div mb-2 \">\r\n                <h2 className=\"artCat\">{category.name}</h2>\r\n\r\n                <hr></hr>\r\n              </div>\r\n              {showArrows[index]?.left && (\r\n                <button\r\n                  className=\"arrow left react-multiple-carousel__arrow\"\r\n                  onClick={() => scrollCarousel(-1, index)} // Scroll left\r\n                >\r\n                  <BsChevronCompactLeft />\r\n                </button>\r\n              )}\r\n              <div\r\n                className=\"artistCarousel px-3 mb-2\"\r\n                ref={(el) => (carouselRefs.current[index] = el)}\r\n                style={{\r\n                  display: \"flex\",\r\n                  overflow: \"hidden\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                {artistsByCategory[category.name]?.map((artist) => (\r\n                  <div\r\n                    key={artist._id}\r\n                    className=\"artistImage\"\r\n                    style={{\r\n                      flex: \"0 0 16.67%\",\r\n                      boxSizing: \"border-box\",\r\n                      padding: \"0 5px\",\r\n                    }}\r\n                  >\r\n                    <Link to={`/artist/${artist._id}`}>\r\n                      <div className=\"artistImage\">\r\n                        {artist.imageUrl && (\r\n                          <img\r\n                            src={`${process.env.REACT_APP_API_URL}/${artist.imageUrl}`}\r\n                            alt={artist.title}\r\n                            width=\"100%\"\r\n                            loading=\"lazy\"\r\n                          />\r\n                        )}\r\n                        <div className=\"artContent\">\r\n                          <h4 className=\"artTitle\">{artist.title}</h4>\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n\r\n                    {/* Add heart icon here */}\r\n                    <div className=\"favoriteIcon\">\r\n                      <button onClick={() => toggleFavorite(artist)}>\r\n                        {isFavorite(artist) ? (\r\n                          <BsHeartFill className=\" favorited\" />\r\n                        ) : (\r\n                          <BsHeartFill className=\"heartIcon \" />\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              {showArrows[index]?.right && (\r\n                <button\r\n                  className=\"arrow right react-multiple-carousel__arrow\"\r\n                  onClick={() => scrollCarousel(1, index)} // Scroll right\r\n                >\r\n                  <BsChevronCompactRight />\r\n                </button>\r\n              )}\r\n            </section>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Musicians;\r\n"],"names":["WelcomeModal","isModalVisible","setIsModalVisible","useState","useEffect","name","parts","concat","document","cookie","split","length","pop","shift","getCookie","timer","setTimeout","createCookie","value","days","expires","date","Date","setTime","getTime","toGMTString","clearTimeout","_jsx","_Fragment","children","className","tabIndex","role","id","style","display","_jsxs","type","onClick","handleClose","src","alt","width","gsap","registerPlugin","Draggable","Musicians","categories","setCategories","artistsByCategory","setArtistsByCategory","favorites","setFavorites","showArrows","setShowArrows","left","right","carouselRefs","useRef","loading","setLoading","async","manualArtistOrder","Singers","DJ","Trending","fetchedCategories","axios","get","process","data","fetchedArtists","filter","artist","isPublished","desiredOrder","sortedCategories","sort","a","b","aIndex","indexOf","bIndex","storedFavorites","JSON","parse","localStorage","getItem","groupedArtists","forEach","category","sortedArtists","map","isFavorite","some","fav","_id","order","sortedByManualOrder","includes","title","remainingArtists","error","console","fetchData","current","updateArrowVisibility","carousel","index","scrollWidth","clientWidth","scrollLeft","prev","window","addEventListener","removeEventListener","innerWidth","killTweensOf","create","bounds","minX","maxX","inertia","throwProps","edgeResistance","onThrowUpdate","to","x","_gsap","ease","snap","Math","round","scrollCarousel","direction","scrollAmount","scrollBy","behavior","Preloader","_showArrows$index","_artistsByCategory$ca","_showArrows$index2","BsChevronCompactLeft","ref","el","overflow","flex","boxSizing","padding","Link","imageUrl","savedFavorites","updatedFavorites","setItem","stringify","toggleFavorite","BsHeartFill","BsChevronCompactRight"],"sourceRoot":""}