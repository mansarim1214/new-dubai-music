{"version":3,"file":"static/js/243.b4fff571.chunk.js","mappings":"oMAMA,MAwEA,EAxEmBA,KACjB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MA4BnC,OA1BAK,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAKMC,SALiBC,EAAAA,EAAMC,IAAI,GAADC,OAC3BC,6BAA6B,qBAIDC,KAAKC,QACnCC,GAA2B,cAAjBA,EAAMC,SAGnBhB,EAAUQ,GACVL,GAAW,EACb,CAAE,MAAOC,GACPa,QAAQb,MAAM,uBAAwBA,GACtCC,EAAS,mDACTF,GAAW,EACb,GAGFe,EAAW,GACV,IAIChB,GAAgBiB,EAAAA,EAAAA,KAACC,EAAAA,EAAS,IAC1BhB,GAAce,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWC,SAAElB,IACzCL,GAA4B,IAAlBA,EAAOwB,QAGpBC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,iBAAgBC,SAAC,kBAC/BH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kBAAiBC,UAC9BE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWC,SAAA,CAAC,IACxBvB,EAAO0B,KAAKV,IACXI,EAAAA,EAAAA,KAAA,OAEEE,UAAU,YACVK,MAAO,CACLC,UAAW,SACXC,QAAS,QACTN,UAEFH,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAE,gBAAAnB,OAAkBI,EAAMgB,KAAMT,UACpCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,aAAYC,SAAA,CACxBP,EAAMiB,gBACLb,EAAAA,EAAAA,KAAA,OACEc,IAAG,GAAAtB,OAAKC,6BAA6B,KAAAD,OAAII,EAAMiB,eAC/CE,IAAKnB,EAAMoB,KACXC,MAAM,OACNlC,QAAQ,UAGZiB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcC,UAC3BH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,WAAUC,SAAEP,EAAMoB,eAlBjCpB,EAAMgB,gBAToBZ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWC,SAAC,mBAmC9D,C","sources":["components/View/MusicStore.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Preloader from \"./Preloader\"; // Import Preloader component\r\nimport \"./frontend.css\";\r\n\r\nconst MusicStore = () => {\r\n  const [stores, setStores] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/api/musicstore`\r\n        );\r\n        \r\n        // Filter only published stores\r\n        const publishedStores = response.data.filter(\r\n          (store) => store.status === \"published\"\r\n        );\r\n        \r\n        setStores(publishedStores);  // Set fetched stores to state\r\n        setLoading(false);  // Set loading to false once data is fetched\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setError(\"Failed to fetch stores. Please try again later.\");  // Set error state if data fetch fails\r\n        setLoading(false);  // Set loading to false in case of error as well\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  \r\n\r\n  if (loading) return <Preloader />; // Use the Preloader component\r\n  if (error) return <div className=\"bg-custom\">{error}</div>;\r\n  if (!stores || stores.length === 0) return <div className=\"bg-custom\">No store found.</div>;\r\n\r\n  return (\r\n    <div className=\"bg-custom\">\r\n      <h2 className=\"my-2 fav-title\">Music Stores</h2>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"storeGrid\"> {/* Grid layout */} \r\n          {stores.map((store) => (\r\n            <div\r\n              key={store._id}\r\n              className=\"storeCard\"\r\n              style={{\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <Link to={`/music-store/${store._id}`}>\r\n                <div className=\"storeImage\">\r\n                  {store.featuredImage && (\r\n                    <img\r\n                      src={`${process.env.REACT_APP_API_URL}/${store.featuredImage}`}\r\n                      alt={store.name}\r\n                      width=\"100%\"\r\n                      loading=\"lazy\"\r\n                    />\r\n                  )}\r\n                  <div className=\"storeContent\">\r\n                    <h4 className=\"artTitle\">{store.name}</h4>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MusicStore;\r\n"],"names":["MusicStore","stores","setStores","useState","loading","setLoading","error","setError","useEffect","async","publishedStores","axios","get","concat","process","data","filter","store","status","console","fetchData","_jsx","Preloader","className","children","length","_jsxs","map","style","textAlign","padding","Link","to","_id","featuredImage","src","alt","name","width"],"sourceRoot":""}