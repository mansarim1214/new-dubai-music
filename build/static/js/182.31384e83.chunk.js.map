{"version":3,"file":"static/js/182.31384e83.chunk.js","mappings":"8MAQAA,EAAAA,GAAKC,eAAeC,EAAAA,GAEpB,MAuJA,EAvJkBC,KAChB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,CAAEG,MAAM,EAAOC,OAAO,IAC7DC,GAAcC,EAAAA,EAAAA,QAAO,OAE3BC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GACxEb,EAAaS,EAAe,GAC3B,KAEHD,EAAAA,EAAAA,YAAU,KACR,GAAIF,EAAYQ,QAAS,CACvB,MAAMC,EAAwBA,KAC5B,GAAIT,EAAYQ,QAAS,CACvB,MAAME,EAAcV,EAAYQ,QAAQE,YAClCC,EAAcX,EAAYQ,QAAQG,YAClCC,EAAaZ,EAAYQ,QAAQI,WAEvCf,EAAc,CACZC,KAAMc,EAAa,EACnBb,MAAOa,EAAaF,EAAcC,GAEtC,GAMF,OAHAF,IAEAI,OAAOC,iBAAiB,SAAUL,GAC3B,IAAMI,OAAOE,oBAAoB,SAAUN,EACpD,IACC,CAAChB,KAEJS,EAAAA,EAAAA,YAAU,KACJW,OAAOG,YAAc,KAAOhB,EAAYQ,UAC1CnB,EAAAA,GAAK4B,aAAajB,EAAYQ,SAE9BjB,EAAAA,EAAU2B,OAAOlB,EAAYQ,QAAS,CACpCW,KAAM,IACNC,OAAQ,CACNC,MAAOrB,EAAYQ,QAAQE,YAAcV,EAAYQ,QAAQG,YAC7DW,KAAM,GAERC,SAAS,EACTC,YAAY,EACZC,eAAgB,IAChBC,cAAeA,KACbrC,EAAAA,GAAKsC,GAAG3B,EAAYQ,QAAS,CAAEoB,EAAG5B,EAAYQ,QAAQqB,MAAMD,EAAGE,KAAM,cAAe,EAEtFC,KAAM,CACJH,EAAII,GAAsC,IAA5BC,KAAKC,MAAMF,EAAQ,UAGvC,GACC,CAACvC,IAEJ,MAMM0C,EAAkBC,IACtB,GAAIpC,EAAYQ,QAAS,CACvB,MAAM6B,EAAe,IAAMD,EAC3BpC,EAAYQ,QAAQ8B,SAAS,CAAExC,KAAMuC,EAAcE,SAAU,WAE7DC,YAAW,KACT,MAAM9B,EAAcV,EAAYQ,QAAQE,YAClCC,EAAcX,EAAYQ,QAAQG,YAClCC,EAAaZ,EAAYQ,QAAQI,WAEvCf,EAAc,CACZC,KAAMc,EAAa,EACnBb,MAAOa,EAAaF,EAAcC,GAClC,GACD,IACL,GAGF,OACE8B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAsBG,GAAG,YAAWF,SAAA,EACnDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iBAAgBC,UAACF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,+BACpC/C,EAAWE,OACV2C,EAAAA,EAAAA,KAAA,UACEC,UAAU,4CACVI,QAASA,IAAMX,GAAgB,GAAIQ,UAEnCF,EAAAA,EAAAA,KAACM,EAAAA,qBAAoB,OAGzBN,EAAAA,EAAAA,KAAA,OACEC,UAAU,iBACVM,IAAKhD,EACLiD,MAAO,CACLC,QAAS,OACTC,SAAU,SACVC,MAAO,QACPT,SAEDlD,EAAU4D,OAAS,EAClB5D,EAAU6D,KAAKC,IACbX,EAAAA,EAAAA,MAAA,OAEEF,UAAU,cACVO,MAAO,CACLO,KAAM,aACNC,UAAW,aACXC,QAAS,SACTf,SAAA,EAEFF,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAAChC,GAAE,WAAAiC,OAAaL,EAAOM,KAAMlB,UAChCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,CACzBY,EAAOO,WACNrB,EAAAA,EAAAA,KAAA,OACEsB,IAAG,GAAAH,OAAKI,6BAA6B,KAAAJ,OAAIL,EAAOO,UAChDG,IAAKV,EAAOW,MACZd,MAAM,OACNe,QAAQ,UAGZ1B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAUC,SAAEY,EAAOW,gBAIvCzB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,UAAQK,QAASA,IAxETS,KACtB,MAAMa,EAAmB3E,EAAU4E,QAAQC,GAAQA,EAAIT,MAAQN,EAAOM,MACtEnE,EAAa0E,GACb9D,aAAaiE,QAAQ,YAAanE,KAAKoE,UAAUJ,GAAkB,EAqE9BK,CAAelB,GAAQZ,UAC5CF,EAAAA,EAAAA,KAACiC,EAAAA,YAAW,CAAChC,UAAU,oBAzBtBa,EAAOM,QAgChBpB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,OAAMC,SAAC,wBAGvB/C,EAAWG,QACV0C,EAAAA,EAAAA,KAAA,UACEC,UAAU,6CACVI,QAASA,IAAMX,EAAe,GAAIQ,UAElCF,EAAAA,EAAAA,KAACkC,EAAAA,sBAAqB,UAIxB,C","sources":["components/View/Favorites.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsHeartFill } from \"react-icons/bs\";\r\nimport { BsChevronCompactRight, BsChevronCompactLeft } from \"react-icons/bs\";\r\nimport { gsap } from \"gsap\";\r\nimport { Draggable } from \"gsap/Draggable\";\r\nimport \"./frontend.css\";\r\n\r\ngsap.registerPlugin(Draggable);\r\n\r\nconst Favorites = () => {\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [showArrows, setShowArrows] = useState({ left: false, right: false });\r\n  const carouselRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const savedFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n    setFavorites(savedFavorites);\r\n  }, []); // Empty dependency array to run only on component mount\r\n\r\n  useEffect(() => {\r\n    if (carouselRef.current) {\r\n      const updateArrowVisibility = () => {\r\n        if (carouselRef.current) {\r\n          const scrollWidth = carouselRef.current.scrollWidth;\r\n          const clientWidth = carouselRef.current.clientWidth;\r\n          const scrollLeft = carouselRef.current.scrollLeft;\r\n\r\n          setShowArrows({\r\n            left: scrollLeft > 0,\r\n            right: scrollLeft < scrollWidth - clientWidth,\r\n          });\r\n        }\r\n      };\r\n\r\n      updateArrowVisibility(); // Initial check\r\n\r\n      window.addEventListener(\"resize\", updateArrowVisibility);\r\n      return () => window.removeEventListener(\"resize\", updateArrowVisibility);\r\n    }\r\n  }, [favorites]); // Dependency on favorites to recalculate arrow visibility when favorites change\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth <= 500 && carouselRef.current) {\r\n      gsap.killTweensOf(carouselRef.current);\r\n      \r\n      Draggable.create(carouselRef.current, {\r\n        type: \"x\",\r\n        bounds: {\r\n          minX: -carouselRef.current.scrollWidth + carouselRef.current.clientWidth,\r\n          maxX: 0,\r\n        },\r\n        inertia: true,\r\n        throwProps: true,\r\n        edgeResistance: 0.65,\r\n        onThrowUpdate: () => {\r\n          gsap.to(carouselRef.current, { x: carouselRef.current._gsap.x, ease: \"power2.out\" });\r\n        },\r\n        snap: {\r\n          x: (value) => Math.round(value / 16.67) * 200, // Adjust based on item width\r\n        },\r\n      });\r\n    }\r\n  }, [favorites]); // Ensure this runs when favorites change, but not continuously\r\n\r\n  const toggleFavorite = (artist) => {\r\n    const updatedFavorites = favorites.filter((fav) => fav._id !== artist._id);\r\n    setFavorites(updatedFavorites);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  const scrollCarousel = (direction) => {\r\n    if (carouselRef.current) {\r\n      const scrollAmount = 300 * direction; // Adjust the scroll amount as needed\r\n      carouselRef.current.scrollBy({ left: scrollAmount, behavior: \"smooth\" });\r\n\r\n      setTimeout(() => {\r\n        const scrollWidth = carouselRef.current.scrollWidth;\r\n        const clientWidth = carouselRef.current.clientWidth;\r\n        const scrollLeft = carouselRef.current.scrollLeft;\r\n\r\n        setShowArrows({\r\n          left: scrollLeft > 0,\r\n          right: scrollLeft < scrollWidth - clientWidth,\r\n        });\r\n      }, 500); // Delay to allow smooth scrolling to update visibility\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-custom\">\r\n      <div className=\"container-fluid p-0\" id=\"favorites\">\r\n      <h2 className=\"mb-3 fav-title\"><strong>Artists You've Favorited</strong></h2>\r\n        {showArrows.left && (\r\n          <button\r\n            className=\"arrow left react-multiple-carousel__arrow\"\r\n            onClick={() => scrollCarousel(-1)} // Scroll left\r\n          >\r\n            <BsChevronCompactLeft />\r\n          </button>\r\n        )}\r\n        <div\r\n          className=\"artistCarousel\"\r\n          ref={carouselRef}\r\n          style={{\r\n            display: \"flex\",\r\n            overflow: \"hidden\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {favorites.length > 0 ? (\r\n            favorites.map((artist) => (\r\n              <div\r\n                key={artist._id}\r\n                className=\"artistImage\"\r\n                style={{\r\n                  flex: \"0 0 16.67%\", // 6 items visible at a time\r\n                  boxSizing: \"border-box\",\r\n                  padding: \"0 5px\",\r\n                }}\r\n              >\r\n                <Link to={`/artist/${artist._id}`}>\r\n                  <div className=\"artistImage\">\r\n                    {artist.imageUrl && (\r\n                      <img\r\n                        src={`${process.env.REACT_APP_API_URL}/${artist.imageUrl}`}\r\n                        alt={artist.title}\r\n                        width=\"100%\"\r\n                        loading=\"lazy\"\r\n                      />\r\n                    )}\r\n                    <div className=\"artContent\">\r\n                      <h4 className=\"artTitle\">{artist.title}</h4>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n                <div className=\"favoriteIcon\">\r\n                  <button onClick={() => toggleFavorite(artist)}>\r\n                    <BsHeartFill className=\"favorited\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            \r\n            <p className=\"px-3\">No favorites yet!</p>\r\n          )}\r\n        </div>\r\n        {showArrows.right && (\r\n          <button\r\n            className=\"arrow right react-multiple-carousel__arrow\"\r\n            onClick={() => scrollCarousel(1)} // Scroll right\r\n          >\r\n            <BsChevronCompactRight />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n"],"names":["gsap","registerPlugin","Draggable","Favorites","favorites","setFavorites","useState","showArrows","setShowArrows","left","right","carouselRef","useRef","useEffect","savedFavorites","JSON","parse","localStorage","getItem","current","updateArrowVisibility","scrollWidth","clientWidth","scrollLeft","window","addEventListener","removeEventListener","innerWidth","killTweensOf","create","type","bounds","minX","maxX","inertia","throwProps","edgeResistance","onThrowUpdate","to","x","_gsap","ease","snap","value","Math","round","scrollCarousel","direction","scrollAmount","scrollBy","behavior","setTimeout","_jsx","className","children","_jsxs","id","onClick","BsChevronCompactLeft","ref","style","display","overflow","width","length","map","artist","flex","boxSizing","padding","Link","concat","_id","imageUrl","src","process","alt","title","loading","updatedFavorites","filter","fav","setItem","stringify","toggleFavorite","BsHeartFill","BsChevronCompactRight"],"sourceRoot":""}